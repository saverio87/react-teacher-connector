[{"/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/index.js":"1","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/App.js":"2","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/store.js":"3","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/actions/auth.js":"4","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/utils/setAuthToken.js":"5","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/layout/Navbar.js":"6","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/layout/Landing.js":"7","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/layout/Alert.js":"8","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/auth/Login.js":"9","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/auth/Register.js":"10","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/profile-forms/CreateProfile.js":"11","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/profile-forms/AddExperience.js":"12","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/profile-forms/EditProfile.js":"13","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/profile-forms/AddEducation.js":"14","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/dashboard/Dashboard.js":"15","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/profile/Profile.js":"16","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/profiles/Profiles.js":"17","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/post/Post.js":"18","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/routing/PrivateRoute.js":"19","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/dashboard/Experience.js":"20","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/reviews/ReviewForm.js":"21","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/dashboard/Education.js":"22","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/posts/Posts.js":"23","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/reviews/Review.js":"24","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/reviews/Reviews.js":"25","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/actions/types.js":"26","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/actions/alert.js":"27","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/utils/styledComponents.js":"28","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/actions/profile.js":"29","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/profile-forms/ChooseAvatar.js":"30","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/layout/ProfileImage.js":"31","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/actions/review.js":"32","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/reviews/ReviewItem.js":"33","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/layout/Spinner.js":"34","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/actions/post.js":"35","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/posts/PostForm.js":"36","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/reviews/ReviewAccordion.js":"37","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/posts/PostItem.js":"38","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/layout/Card.js":"39","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/dashboard/EducationItem.js":"40","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/dashboard/ExperienceItem.js":"41","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/utils/emojiList.js":"42","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/utils/formatDate.js":"43","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/reviews/Emoji.js":"44","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/post/CommentForm.js":"45","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/post/CommentItem.js":"46","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/profiles/ProfileItem.js":"47","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/profile/ProfileAccordion.js":"48","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/dashboard/DashboardActions.js":"49","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/reducers/index.js":"50","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/utils/avatarList.js":"51","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/reducers/alert.js":"52","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/reducers/review.js":"53","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/reducers/auth.js":"54","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/reducers/profile.js":"55","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/reducers/post.js":"56"},{"size":244,"mtime":1635747362311,"results":"57","hashOfConfig":"58"},{"size":3543,"mtime":1636353881751,"results":"59","hashOfConfig":"58"},{"size":392,"mtime":1609139140151,"results":"60","hashOfConfig":"58"},{"size":2427,"mtime":1609503182329,"results":"61","hashOfConfig":"58"},{"size":242,"mtime":1609400264893,"results":"62","hashOfConfig":"58"},{"size":3637,"mtime":1637665145089,"results":"63","hashOfConfig":"58"},{"size":2166,"mtime":1638091638946,"results":"64","hashOfConfig":"58"},{"size":668,"mtime":1610532567300,"results":"65","hashOfConfig":"58"},{"size":3700,"mtime":1636009052848,"results":"66","hashOfConfig":"58"},{"size":4467,"mtime":1636009066189,"results":"67","hashOfConfig":"58"},{"size":41190,"mtime":1636790810535,"results":"68","hashOfConfig":"58"},{"size":4704,"mtime":1637139414841,"results":"69","hashOfConfig":"58"},{"size":43481,"mtime":1637142173508,"results":"70","hashOfConfig":"58"},{"size":4762,"mtime":1637139480097,"results":"71","hashOfConfig":"58"},{"size":2708,"mtime":1637040066017,"results":"72","hashOfConfig":"58"},{"size":4104,"mtime":1637301123193,"results":"73","hashOfConfig":"58"},{"size":1601,"mtime":1636357065449,"results":"74","hashOfConfig":"58"},{"size":1160,"mtime":1637140925714,"results":"75","hashOfConfig":"58"},{"size":631,"mtime":1609497490722,"results":"76","hashOfConfig":"58"},{"size":1617,"mtime":1637139171159,"results":"77","hashOfConfig":"58"},{"size":44011,"mtime":1637228313163,"results":"78","hashOfConfig":"58"},{"size":1798,"mtime":1637139193971,"results":"79","hashOfConfig":"58"},{"size":1129,"mtime":1636357133668,"results":"80","hashOfConfig":"58"},{"size":1211,"mtime":1637140847516,"results":"81","hashOfConfig":"58"},{"size":1365,"mtime":1637140756559,"results":"82","hashOfConfig":"58"},{"size":1194,"mtime":1610685577762,"results":"83","hashOfConfig":"58"},{"size":356,"mtime":1609318424366,"results":"84","hashOfConfig":"58"},{"size":4308,"mtime":1637302351030,"results":"85","hashOfConfig":"58"},{"size":5137,"mtime":1610087899420,"results":"86","hashOfConfig":"58"},{"size":2026,"mtime":1636630952390,"results":"87","hashOfConfig":"58"},{"size":815,"mtime":1637300330975,"results":"88","hashOfConfig":"58"},{"size":1437,"mtime":1636037317113,"results":"89","hashOfConfig":"58"},{"size":1006,"mtime":1637228852873,"results":"90","hashOfConfig":"58"},{"size":250,"mtime":1609504027965,"results":"91","hashOfConfig":"58"},{"size":3864,"mtime":1610680295662,"results":"92","hashOfConfig":"58"},{"size":1396,"mtime":1637226554407,"results":"93","hashOfConfig":"58"},{"size":6239,"mtime":1637301717301,"results":"94","hashOfConfig":"58"},{"size":1459,"mtime":1637041890657,"results":"95","hashOfConfig":"58"},{"size":10444,"mtime":1637571267254,"results":"96","hashOfConfig":"58"},{"size":1874,"mtime":1637138989500,"results":"97","hashOfConfig":"58"},{"size":1854,"mtime":1637138999360,"results":"98","hashOfConfig":"58"},{"size":392,"mtime":1613538887865,"results":"99","hashOfConfig":"58"},{"size":117,"mtime":1609739235309,"results":"100","hashOfConfig":"58"},{"size":2442,"mtime":1637225371865,"results":"101","hashOfConfig":"58"},{"size":1651,"mtime":1637141114513,"results":"102","hashOfConfig":"58"},{"size":3274,"mtime":1636276331628,"results":"103","hashOfConfig":"58"},{"size":891,"mtime":1637298807030,"results":"104","hashOfConfig":"58"},{"size":3021,"mtime":1636036165043,"results":"105","hashOfConfig":"58"},{"size":1801,"mtime":1637040202458,"results":"106","hashOfConfig":"58"},{"size":272,"mtime":1610685975426,"results":"107","hashOfConfig":"58"},{"size":451,"mtime":1613471908238,"results":"108","hashOfConfig":"58"},{"size":375,"mtime":1609139920861,"results":"109","hashOfConfig":"58"},{"size":828,"mtime":1611221322078,"results":"110","hashOfConfig":"58"},{"size":1095,"mtime":1609833133545,"results":"111","hashOfConfig":"58"},{"size":843,"mtime":1610105456964,"results":"112","hashOfConfig":"58"},{"size":1723,"mtime":1610544793279,"results":"113","hashOfConfig":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},"bm3ehe",{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"116"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"116"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"116"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"116"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"116"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"116"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"116"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"116"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"116"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"116"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"116"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"116"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"116"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"116"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"116"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"116"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"116"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"116"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"116"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"116"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"116"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"116"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"116"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"116"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"116"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"116"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"116"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"116"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"116"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"116"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"116"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"116"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"116"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"116"},"/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/index.js",[],["261","262"],"/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/App.js",[],"/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/store.js",["263"],"import { createStore, applyMiddleware, compose } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/actions/auth.js",[],"/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/utils/setAuthToken.js",[],"/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/layout/Navbar.js",["264","265","266","267","268"],"import React, { useState, useEffect } from \"react\";\nimport { Navbar as BoostrapNavbar } from \"react-bootstrap\";\nimport Container from \"react-bootstrap/Container\";\nimport Nav from \"react-bootstrap/Nav\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { logout } from \"../../actions/auth\";\nimport { useMediaPredicate } from \"react-media-hook\";\nimport { StyledLink } from \"../../utils/styledComponents\";\n\nconst webTitle = styled(Nav.Link)`\n  color: white;\n  text-decoration: none;\n`;\n\nconst Navbar = ({ auth: { isAuthenticated, loading }, logout }) => {\n  // const [toggleLinks, setToggleLinks] = useState(false);\n\n  // const smallerThan700 = useMediaPredicate(\"(max-width: 700px)\");\n\n  // const onLogout = () => {\n  //   logout();\n  // };\n\n  // // const onToggle = () => {\n  //   smallerThan700\n  //     ? setToggleLinks((toggleLinks) => !toggleLinks)\n  //     : setToggleLinks(toggleLinks);\n  // };\n\n  // useEffect(() => {\n  //   setToggleLinks(false);\n  // }, []);\n\n  const authLinks = (\n    <>\n      <Nav.Link>\n        <StyledLink color=\"#41a0b3\" size=\"1.2rem\" to=\"/profiles\">\n          Teachers\n        </StyledLink>\n      </Nav.Link>\n      <Nav.Link>\n        <StyledLink color=\"#41a0b3\" size=\"1.2rem\" to=\"/posts\">\n          Bulletin board\n        </StyledLink>\n      </Nav.Link>\n      <Nav.Link>\n        <StyledLink color=\"#41a0b3\" size=\"1.2rem\" to=\"/reviews\">\n          Reviews\n        </StyledLink>\n      </Nav.Link>\n      <Nav.Link>\n        <StyledLink color=\"#41a0b3\" size=\"1.2rem\" to=\"/dashboard\">\n          <i className=\"fas fa-user\"></i> <span>Dashboard</span>\n        </StyledLink>\n      </Nav.Link>\n      <Nav.Link>\n        <StyledLink color=\"#41a0b3\" size=\"1.2rem\" onClick={logout}>\n          <i className=\"fas fa-sign-out-alt\"></i> <span>Logout</span>\n        </StyledLink>\n      </Nav.Link>\n    </>\n  );\n\n  const guestLinks = (\n    <>\n      <Nav.Link>\n        <StyledLink color=\"#41a0b3\" size=\"1.2rem\" to=\"/profiles\">\n          Teachers\n        </StyledLink>\n      </Nav.Link>\n      <Nav.Link>\n        <StyledLink color=\"#41a0b3\" size=\"1.2rem\" to=\"/register\">\n          Register\n        </StyledLink>\n      </Nav.Link>\n      <Nav.Link>\n        <StyledLink color=\"#41a0b3\" size=\"1.2rem\" to=\"/login\">\n          Login\n        </StyledLink>\n      </Nav.Link>\n    </>\n  );\n\n  return (\n    <>\n      <BoostrapNavbar\n        collapseOnSelect\n        expand=\"lg\"\n        variant=\"dark\"\n        style={{ backgroundColor: \"#D7E8EB\" }}\n      >\n        <Container>\n          <BoostrapNavbar.Brand href=\"#home\">\n            &nbsp;&nbsp;\n            <webTitle>\n              <StyledLink color=\"#41a0b3\" weight=\"800\" size=\"1.5rem\" to=\"/\">\n                <i className=\"fas fa-chalkboard-teacher\" />\n                &nbsp; Waijiao Connect\n              </StyledLink>\n            </webTitle>\n          </BoostrapNavbar.Brand>\n          <BoostrapNavbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n          <BoostrapNavbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav\n              style={{ width: \"100%\" }}\n              className=\"justify-content-end ml-auto gap-3\"\n            >\n              {!loading && <> {isAuthenticated ? authLinks : guestLinks} </>}\n            </Nav>\n          </BoostrapNavbar.Collapse>\n        </Container>\n      </BoostrapNavbar>\n    </>\n  );\n};\n\n// Navbar.propTypes = {\n//   logout: PropTypes.func.isRequired,\n//   auth: PropTypes.object.isRequired,\n// };\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { logout })(Navbar);\n","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/layout/Landing.js",["269","270","271"],"/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/layout/Alert.js",[],"/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/auth/Login.js",[],"/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/auth/Register.js",[],"/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/profile-forms/CreateProfile.js",["272","273","274"],"import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { createProfile } from \"../../actions/profile\";\n\nimport ChooseAvatar from \"./ChooseAvatar\";\n\nimport ProfileImage from \"../layout/ProfileImage\";\n\nimport { Header, Text, PrimaryText } from \"../../utils/styledComponents\";\n\nimport {\n  Accordion,\n  Button,\n  Card,\n  Container,\n  Form,\n  Row,\n  Col,\n} from \"react-bootstrap\";\n\nconst initialState = {\n  sex: \"\",\n  nationality: \"\",\n  avatar: \"\",\n  status: \"\",\n  school: \"\",\n  location: \"\",\n  yearsofexperience: \"\",\n  bio: \"\",\n  phone: \"\",\n  email: \"\",\n  wechat: \"\",\n  twitter: \"\",\n  facebook: \"\",\n  linkedin: \"\",\n  youtube: \"\",\n  instagram: \"\",\n};\n\nconst CreateProfile = ({ auth: { user }, createProfile, history }) => {\n  const [formData, setFormData] = useState(initialState);\n  const [toggleModal, setToggleModal] = useState(false);\n\n  const onToggleModal = () => setToggleModal((toggleModal) => !toggleModal);\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const changeAvatar = (newAvatar) => {\n    setFormData({\n      ...formData,\n      avatar: newAvatar,\n    });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    createProfile(formData, history);\n  };\n\n  const {\n    sex,\n    nationality,\n    avatar,\n    school,\n    location,\n    status,\n    yearsofexperience,\n    bio,\n    phone,\n    email,\n    wechat,\n    twitter,\n    facebook,\n    linkedin,\n    youtube,\n    instagram,\n  } = formData;\n\n  return (\n    <>\n      {toggleModal ? (\n        <ChooseAvatar\n          toggleModal={toggleModal}\n          changeAvatar={(newAvatar) => changeAvatar(newAvatar)}\n          setToggleModal={() => setToggleModal((toggleModal) => !toggleModal)}\n        />\n      ) : (\n        <>\n          <Header>\n            <Text color=\"#41a0b3\" size=\"2rem\">\n              Create your profile\n            </Text>\n            <Text size=\"1.2rem\">\n              Let's get some information to make your profile stand out\n            </Text>\n          </Header>\n\n          <Card\n            style={{\n              margin: \"2rem 0rem 2rem 0rem\",\n              border: \"2px #41A0B3 solid\",\n            }}\n          >\n            <Card.Header\n              style={{\n                backgroundColor: \"#D7E8EB\",\n              }}\n            >\n              {\" \"}\n              <div className=\"d-flex flex-column align-items-center\">\n                <a onClick={onToggleModal}>\n                  <ProfileImage\n                    image={avatar && avatar}\n                    name={user.name && user.name}\n                  />\n                </a>\n                <Text size=\"2rem\" weight=\"400\">\n                  {user && user.name}\n                </Text>\n              </div>\n            </Card.Header>\n            <Card.Body>\n              {/* Start of our form */}\n              <Form onSubmit={(e) => onSubmit(e)}>\n                <Accordion flush>\n                  <Accordion.Item eventKey=\"1\">\n                    <Accordion.Header>\n                      <PrimaryText size=\"1.5rem\" weight=\"400\">\n                        User Info\n                      </PrimaryText>\n                    </Accordion.Header>\n                    <Accordion.Body>\n                      <Form.Group className=\"mb-3\">\n                        <Form.Label>Sex</Form.Label>\n                        <div className=\"d-flex d-row\">\n                          <Form.Check\n                            type=\"checkbox\"\n                            name=\"sex\"\n                            id=\"male\"\n                            label=\"Male\"\n                            value=\"male\"\n                            onChange={(e) => onChange(e)}\n                          />\n\n                          <Form.Check\n                            type=\"checkbox\"\n                            name=\"sex\"\n                            label=\"Female\"\n                            id=\"female\"\n                            value=\"female\"\n                            onChange={(e) => onChange(e)}\n                          />\n                        </div>\n                      </Form.Group>\n                      <Form.Group className=\"mb-3\">\n                        <Form.Label>Nationality</Form.Label>\n                        <Form.Select\n                          name=\"nationality\"\n                          value={nationality}\n                          onChange={(e) => onChange(e)}\n                        >\n                          <option>Afghanistan</option>\n                          <option>Albania</option>\n                          <option>Algeria</option>\n                          <option>Andorra</option>\n                          <option>Angola</option>\n                          <option>Antigua and Barbuda</option>\n                          <option>Argentina</option>\n                          <option>Armenia</option>\n                          <option>Aruba</option>\n                          <option>Australia</option>\n                          <option>Austria</option>\n                          <option>Azerbaijan</option>\n                          <option>Bahamas, The</option>\n                          <option>Bahrain</option>\n                          <option>Bangladesh</option>\n                          <option>Barbados</option>\n                          <option>Belarus</option>\n                          <option>Belgium</option>\n                          <option>Belize</option>\n                          <option>Benin</option>\n                          <option>Bhutan</option>\n                          <option>Bolivia</option>\n                          <option>Bosnia and Herzegovina</option>\n                          <option>Botswana</option>\n                          <option>Brazil</option>\n                          <option>Brunei</option>\n                          <option>Bulgaria</option>\n                          <option>Burkina Faso</option>\n                          <option>Burma</option>\n                          <option>Burundi</option>\n                          <option>Cambodia</option>\n                          <option>Cameroon</option>\n                          <option>Canada</option>\n                          <option>Cabo Verde</option>\n                          <option>Central African Republic</option>\n                          <option>Chad</option>\n                          <option>Chile</option>\n                          <option>China</option>\n                          <option>Colombia</option>\n                          <option>Comoros</option>\n                          <option>Congo, Democratic Republic of the</option>\n                          <option>Congo, Republic of the</option>\n                          <option>Costa Rica</option>\n                          <option>Cote d'Ivoire</option>\n                          <option>Croatia</option>\n                          <option>Cuba</option>\n                          <option>Curacao</option>\n                          <option>Cyprus</option>\n                          <option>Czech Republic</option>\n                          <option>Denmark</option>\n                          <option>Djibouti</option>\n                          <option>Dominica</option>\n                          <option>Dominican Republic</option>\n                          <option>East Timor (see Timor-Leste)</option>\n                          <option>Ecuador</option>\n                          <option>Egypt</option>\n                          <option>El Salvador</option>\n                          <option>Equatorial Guinea</option>\n                          <option>Eritrea</option>\n                          <option>Estonia</option>\n                          <option>Ethiopia</option>\n                          <option>Fiji</option>\n                          <option>Finland</option>\n                          <option>France</option>\n                          <option>Gabon</option>\n                          <option>Gambia, The</option>\n                          <option>Georgia</option>\n                          <option>Germany</option>\n                          <option>Ghana</option>\n                          <option>Greece</option>\n                          <option>Grenada</option>\n                          <option>Guatemala</option>\n                          <option>Guinea</option>\n                          <option>Guinea-Bissau</option>\n                          <option>Guyana</option>\n                          <option>Haiti</option>\n                          <option>Holy See</option>\n                          <option>Honduras</option>\n                          <option>Hong Kong</option>\n                          <option>Hungary</option>\n                          <option>Iceland</option>\n                          <option>India</option>\n                          <option>Indonesia</option>\n                          <option>Iran</option>\n                          <option>Iraq</option>\n                          <option>Ireland</option>\n                          <option>Israel</option>\n                          <option>Italy</option>\n                          <option>Jamaica</option>\n                          <option>Japan</option>\n                          <option>Jordan</option>\n                          <option>Kazakhstan</option>\n                          <option>Kenya</option>\n                          <option>Kiribati</option>\n                          <option>Korea, North</option>\n                          <option>Korea, South</option>\n                          <option>Kosovo</option>\n                          <option>Kuwait</option>\n                          <option>Kyrgyzstan</option>\n                          <option>Laos</option>\n                          <option>Latvia</option>\n                          <option>Lebanon</option>\n                          <option>Lesotho</option>\n                          <option>Liberia</option>\n                          <option>Libya</option>\n                          <option>Liechtenstein</option>\n                          <option>Lithuania</option>\n                          <option>Luxembourg</option>\n                          <option>Macau</option>\n                          <option>Macedonia</option>\n                          <option>Madagascar</option>\n                          <option>Malawi</option>\n                          <option>Malaysia</option>\n                          <option>Maldives</option>\n                          <option>Mali</option>\n                          <option>Malta</option>\n                          <option>Marshall Islands</option>\n                          <option>Mauritania</option>\n                          <option>Mauritius</option>\n                          <option>Mexico</option>\n                          <option>Micronesia</option>\n                          <option>Moldova</option>\n                          <option>Monaco</option>\n                          <option>Mongolia</option>\n                          <option>Montenegro</option>\n                          <option>Morocco</option>\n                          <option>Mozambique</option>\n                          <option>Namibia</option>\n                          <option>Nauru</option>\n                          <option>Nepal</option>\n                          <option>Netherlands</option>\n                          <option>New Zealand</option>\n                          <option>Nicaragua</option>\n                          <option>Niger</option>\n                          <option>Nigeria</option>\n                          <option>North Korea</option>\n                          <option>Norway</option>\n                          <option>Oman</option>\n                          <option>Pakistan</option>\n                          <option>Palau</option>\n                          <option>Palestinian Territories</option>\n                          <option>Panama</option>\n                          <option>Papua New Guinea</option>\n                          <option>Paraguay</option>\n                          <option>Peru</option>\n                          <option>Philippines</option>\n                          <option>Poland</option>\n                          <option>Portugal</option>\n                          <option>Qatar</option>\n                          <option>Romania</option>\n                          <option>Russia</option>\n                          <option>Rwanda</option>\n                          <option>Saint Kitts and Nevis</option>\n                          <option>Saint Lucia</option>\n                          <option>Saint Vincent and the Grenadines</option>\n                          <option>Samoa</option>\n                          <option>San Marino</option>\n                          <option>Sao Tome and Principe</option>\n                          <option>Saudi Arabia</option>\n                          <option>Senegal</option>\n                          <option>Serbia</option>\n                          <option>Seychelles</option>\n                          <option>Sierra Leone</option>\n                          <option>Singapore</option>\n                          <option>Sint Maarten</option>\n                          <option>Slovakia</option>\n                          <option>Slovenia</option>\n                          <option>Solomon Islands</option>\n                          <option>Somalia</option>\n                          <option>South Africa</option>\n                          <option>South Korea</option>\n                          <option>South Sudan</option>\n                          <option>Spain</option>\n                          <option>Sri Lanka</option>\n                          <option>Sudan</option>\n                          <option>Suriname</option>\n                          <option>Swaziland</option>\n                          <option>Sweden</option>\n                          <option>Switzerland</option>\n                          <option>Syria</option>\n                          <option>Taiwan</option>\n                          <option>Tajikistan</option>\n                          <option>Tanzania</option>\n                          <option>Thailand</option>\n                          <option>Timor-Leste</option>\n                          <option>Togo</option>\n                          <option>Tonga</option>\n                          <option>Trinidad and Tobago</option>\n                          <option>Tunisia</option>\n                          <option>Turkey</option>\n                          <option>Turkmenistan</option>\n                          <option>Tuvalu</option>\n                          <option>Uganda</option>\n                          <option>Ukraine</option>\n                          <option>United Arab Emirates</option>\n                          <option>United Kingdom</option>\n                          <option>Uruguay</option>\n                          <option>Uzbekistan</option>\n                          <option>Vanuatu</option>\n                          <option>Venezuela</option>\n                          <option>Vietnam</option>\n                          <option>Yemen</option>\n                          <option>Zambia</option>\n                          <option>Zimbabwe</option>\n                        </Form.Select>\n                      </Form.Group>\n                      <Form.Group className=\"mb-3\">\n                        <Form.Label>Location</Form.Label>\n                        <Form.Select\n                          name=\"location\"\n                          value={location}\n                          onChange={(e) => onChange(e)}\n                        >\n                          <option class=\"province\" disabled>\n                            Anhui (Province)\n                          </option>\n                          <option>Anqing</option>\n                          <option>Bengbu</option>\n                          <option>Hefei</option>\n                          <option>Huainan</option>\n                          <option>Huangshan</option>\n                          <option>Ma’anshan</option>\n                          <option>Shexian</option>\n                          <option>Tongcheng</option>\n                          <option>Tongling</option>\n                          <option>Wuhu</option>\n                          <option>Xuancheng</option>\n                          <option class=\"province\" disabled>\n                            Beijing (Provincial-Level Municipality, Capital)\n                          </option>\n                          <option>Beijing</option>\n                          <option class=\"province\" disabled>\n                            Chongqing (Provincial-Level Municipality)\n                          </option>\n                          <option>Chongqing</option>\n                          <option>Hechuan</option>\n                          <option>Wanzhou</option>\n                          <option class=\"province\" disabled>\n                            Fujian (Province)\n                          </option>\n                          <option>Fuzhou</option>\n                          <option>Longyan</option>\n                          <option>Nanping</option>\n                          <option>Quanzhou</option>\n                          <option>Sanming</option>\n                          <option>Shaowu</option>\n                          <option>Xiamen</option>\n                          <option>Yong’an</option>\n                          <option>Zhangzhou</option>\n                          <option class=\"province\" disabled>\n                            Gansu (Province)\n                          </option>\n                          <option>Dunhuang</option>\n                          <option>Jiuquan</option>\n                          <option>Lanzhou</option>\n                          <option>Pingliang</option>\n                          <option>Tianshui</option>\n                          <option>Wuwei</option>\n                          <option>Yumen</option>\n                          <option class=\"province\" disabled>\n                            Guangdong (Province)\n                          </option>\n                          <option>Chaozhou</option>\n                          <option>Foshan</option>\n                          <option>Guangzhou</option>\n                          <option>Jiangmen</option>\n                          <option>Maoming</option>\n                          <option>Meizhou</option>\n                          <option>Shantou</option>\n                          <option>Shaoguan</option>\n                          <option>Shenzhen</option>\n                          <option>Zhanjiang</option>\n                          <option>Zhaoqing</option>\n                          <option>Zhongshan</option>\n                          <option class=\"province\" disabled>\n                            Guangxi (Autonomous Region)\n                          </option>\n                          <option>Baise</option>\n                          <option>Beihai</option>\n                          <option>Guilin</option>\n                          <option>Liuzhou</option>\n                          <option>Nanning</option>\n                          <option>Pingxiang</option>\n                          <option>Wuzhou</option>\n                          <option>Yulin</option>\n                          <option class=\"province\" disabled>\n                            Guizhou (Province)\n                          </option>\n                          <option>Anshun</option>\n                          <option>Duyun</option>\n                          <option>Guiyang</option>\n                          <option>Zunyi</option>\n                          <option class=\"province\" disabled>\n                            Hainan (Province)\n                          </option>\n                          <option>Haikou</option>\n                          <option class=\"province\" disabled>\n                            Hebei (Province)\n                          </option>\n                          <option>Baoding</option>\n                          <option>Cangzhou</option>\n                          <option>Chengde</option>\n                          <option>Handan</option>\n                          <option>Kalgan</option>\n                          <option>Qinhuangdao</option>\n                          <option>Shanhaiguan</option>\n                          <option>Shijiazhuang</option>\n                          <option>Tangshan</option>\n                          <option>Xingtai</option>\n                          <option>Xuanhua</option>\n                          <option>Zhengding</option>\n                          <option class=\"province\" disabled>\n                            Heilongjiang (Province)\n                          </option>\n                          <option>Acheng</option>\n                          <option>Binxian</option>\n                          <option>Harbin</option>\n                          <option>Hegang</option>\n                          <option>Hulan</option>\n                          <option>Jiamusi</option>\n                          <option>Jixi</option>\n                          <option>Mudanjiang</option>\n                          <option>Qiqihar</option>\n                          <option>Shuangyashan</option>\n                          <option>Yichun</option>\n                          <option class=\"province\" disabled>\n                            Henan (Province)\n                          </option>\n                          <option>Anyang</option>\n                          <option>Hebi</option>\n                          <option>Jiaozuo</option>\n                          <option>Kaifeng</option>\n                          <option>Luohe</option>\n                          <option>Luoyang</option>\n                          <option>Nanyang</option>\n                          <option>Shangqiu</option>\n                          <option>Xinxiang</option>\n                          <option>Xinyang</option>\n                          <option>Xuchang</option>\n                          <option>Zhengzhou</option>\n                          <option>Zhoukou</option>\n                          <option class=\"province\" disabled>\n                            Hong Kong (Special Administrative Region)\n                          </option>\n                          <option>Hong Kong</option>\n                          <option>Victoria</option>\n                          <option class=\"province\" disabled>\n                            Hubei (Province)\n                          </option>\n                          <option>Daye</option>\n                          <option>Hankou</option>\n                          <option>Hanyang</option>\n                          <option>Huangshi</option>\n                          <option>Jingzhou</option>\n                          <option>Laohekou</option>\n                          <option>Wuchang</option>\n                          <option>Wuhan</option>\n                          <option>Xiangfan</option>\n                          <option>Yichang</option>\n                          <option class=\"province\" disabled>\n                            Hunan (Province)\n                          </option>\n                          <option>Changde</option>\n                          <option>Changsha</option>\n                          <option>Hengyang</option>\n                          <option>Jinshi</option>\n                          <option>Shaoyang</option>\n                          <option>Xiangtan</option>\n                          <option>Yiyang</option>\n                          <option>Yueyang</option>\n                          <option>Zhuzhou</option>\n                          <option class=\"province\" disabled>\n                            Inner Mongolia (Autonomous Region)\n                          </option>\n                          <option>Baotou</option>\n                          <option>Chifeng</option>\n                          <option>Duolun</option>\n                          <option>Erenhot</option>\n                          <option>Hailar</option>\n                          <option>Hohhot</option>\n                          <option>Jining</option>\n                          <option>Manzhouli</option>\n                          <option>Tongliao</option>\n                          <option class=\"province\" disabled>\n                            Jiangsu (Province)\n                          </option>\n                          <option>Changshu</option>\n                          <option>Changzhou</option>\n                          <option>Huai’an</option>\n                          <option>Huaiyin</option>\n                          <option>Lianyungang</option>\n                          <option>Nanjing</option>\n                          <option>Nantong</option>\n                          <option>Suzhou</option>\n                          <option>Taizhou</option>\n                          <option>Wuxi</option>\n                          <option>Xuzhou</option>\n                          <option>Yancheng</option>\n                          <option>Yangzhou</option>\n                          <option>Zhenjiang</option>\n                          <option class=\"province\" disabled>\n                            Jiangxi (Province)\n                          </option>\n                          <option>Ganzhou</option>\n                          <option>Ji’an</option>\n                          <option>Jingdezhen</option>\n                          <option>Jiujiang</option>\n                          <option>Nanchang</option>\n                          <option>Pingxiang</option>\n                          <option>Shangrao</option>\n                          <option>Zhangshu</option>\n                          <option class=\"province\" disabled>\n                            Jilin (Province)\n                          </option>\n                          <option>Baicheng</option>\n                          <option>Changchun</option>\n                          <option>Jilin</option>\n                          <option>Liaoyuan</option>\n                          <option>Siping</option>\n                          <option>Tonghua</option>\n                          <option>Yanji</option>\n                          <option class=\"province\" disabled>\n                            Liaoning (Province)\n                          </option>\n                          <option>Anshan</option>\n                          <option>Beipiao</option>\n                          <option>Benxi</option>\n                          <option>Dalian</option>\n                          <option>Dandong</option>\n                          <option>Fushun</option>\n                          <option>Fuxin</option>\n                          <option>Jinzhou (southern Liaoning)</option>\n                          <option>Jinzhou (western Liaoning)</option>\n                          <option>Liaoyang</option>\n                          <option>Lüshun</option>\n                          <option>Shenyang</option>\n                          <option>Wafangdian</option>\n                          <option>Yingkou</option>\n                          <option class=\"province\" disabled>\n                            Macau (Special Administrative Region)\n                          </option>\n                          <option>Macau</option>\n                          <option class=\"province\" disabled>\n                            Ningxia (Autonomous Region)\n                          </option>\n                          <option>Yinchuan</option>\n                          <option class=\"province\" disabled>\n                            Qinghai (Province)\n                          </option>\n                          <option>Golmud</option>\n                          <option>Lenghu</option>\n                          <option>Xining</option>\n                          <option class=\"province\" disabled>\n                            Shaanxi (Province)\n                          </option>\n                          <option>Ankang</option>\n                          <option>Baoji</option>\n                          <option>Hanzhong</option>\n                          <option>Shangluo</option>\n                          <option>Tongguan</option>\n                          <option>Xi’an</option>\n                          <option>Xianyang</option>\n                          <option>Yan’an</option>\n                          <option class=\"province\" disabled>\n                            Shandong (Province)\n                          </option>\n                          <option>Dezhou</option>\n                          <option>Jinan</option>\n                          <option>Jining</option>\n                          <option>Linzi</option>\n                          <option>Qingdao</option>\n                          <option>Qufu</option>\n                          <option>Weifang</option>\n                          <option>Weihai</option>\n                          <option>Yantai</option>\n                          <option>Zaozhuang</option>\n                          <option>Zibo</option>\n                          <option class=\"province\" disabled>\n                            Shanghai (Provincial-Level Municipality)\n                          </option>\n                          <option>Shanghai</option>\n                          <option class=\"province\" disabled>\n                            Shanxi (Province)\n                          </option>\n                          <option>Changzhi</option>\n                          <option>Datong</option>\n                          <option>Jinzhong</option>\n                          <option>Linfen</option>\n                          <option>Puzhou</option>\n                          <option>Taiyuan</option>\n                          <option>Yangquan</option>\n                          <option class=\"province\" disabled>\n                            Sichuan (Province)\n                          </option>\n                          <option>Chengdu</option>\n                          <option>Kangding</option>\n                          <option>Luzhou</option>\n                          <option>Mianyang</option>\n                          <option>Nanchong</option>\n                          <option>Neijiang</option>\n                          <option>Wutongqiao</option>\n                          <option>Ya’an</option>\n                          <option>Yibin</option>\n                          <option>Zigong</option>\n                          <option class=\"province\" disabled>\n                            Tianjin (Provincial-Level Municipality)\n                          </option>\n                          <option>Tanggu</option>\n                          <option>Tianjin</option>\n                          <option>Tibet (Autonomous Region)</option>\n                          <option>Gartok</option>\n                          <option>Gyangzê</option>\n                          <option>Lhasa</option>\n                          <option>Xigazê</option>\n                          <option class=\"province\" disabled>\n                            Xinjiang (Autonomous Region)\n                          </option>\n                          <option>Hami</option>\n                          <option>Hotan</option>\n                          <option>Karamay</option>\n                          <option>Kashgar</option>\n                          <option>Kucha</option>\n                          <option>Kuldja</option>\n                          <option>Shihezi</option>\n                          <option>Turfan</option>\n                          <option>Ürümqi</option>\n                          <option>Yarkand</option>\n                          <option class=\"province\" disabled>\n                            Yunnan (Province)\n                          </option>\n                          <option>Dali</option>\n                          <option>Gejiu</option>\n                          <option>Jinghong</option>\n                          <option>Kaiyuan</option>\n                          <option>Kunming</option>\n                          <option>Pu’er</option>\n                          <option class=\"province\" disabled>\n                            Zhejiang (Province)\n                          </option>\n                          <option>Fenghua</option>\n                          <option>Hangzhou</option>\n                          <option>Huzhou</option>\n                          <option>Jiaxing</option>\n                          <option>Jinhua</option>\n                          <option>Ningbo</option>\n                          <option>Quzhou</option>\n                          <option>Shaoxing</option>\n                          <option>Wenzhou</option>\n                        </Form.Select>\n                      </Form.Group>\n                      <Form.Group className=\"mb-3\">\n                        <Form.Label>School name</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"School\"\n                          name=\"school\"\n                          value={school}\n                          onChange={(e) => onChange(e)}\n                        />\n                      </Form.Group>\n                      <Form.Group className=\"mb-3\">\n                        <Form.Label>Position</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"* EAL teacher, Math / Physics teacher, etc.\"\n                          name=\"status\"\n                          value={status}\n                          onChange={(e) => onChange(e)}\n                        />\n                      </Form.Group>\n                      <Form.Group className=\"mb-3\">\n                        <Form.Label>Years of experience</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"\"\n                          name=\"yearsofexperience\"\n                          value={yearsofexperience}\n                          onChange={(e) => onChange(e)}\n                        />\n                      </Form.Group>\n                      <Form.Group className=\"mb-3\">\n                        <Form.Label>Bio</Form.Label>\n                        <Form.Control\n                          as=\"textarea\"\n                          placeholder=\"A short bio of yourself\"\n                          name=\"bio\"\n                          value={bio}\n                          onChange={(e) => onChange(e)}\n                        />\n                      </Form.Group>\n                    </Accordion.Body>\n                  </Accordion.Item>\n                  <Accordion.Item eventKey=\"2\">\n                    <Accordion.Header>\n                      <PrimaryText size=\"1.5rem\" weight=\"400\">\n                        Contact Info\n                      </PrimaryText>\n                    </Accordion.Header>\n                    <Accordion.Body>\n                      <Form.Group className=\"mb-3\">\n                        <Form.Label>Wechat ID</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"\"\n                          name=\"wechat\"\n                          value={wechat}\n                          onChange={(e) => onChange(e)}\n                        />\n                      </Form.Group>\n                      <Form.Group className=\"mb-3\">\n                        <Form.Label>Work number</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"\"\n                          name=\"phone\"\n                          value={phone}\n                          onChange={(e) => onChange(e)}\n                        />\n                      </Form.Group>\n                      <Form.Group className=\"mb-3\">\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"\"\n                          name=\"email\"\n                          value={email}\n                          onChange={(e) => onChange(e)}\n                        />\n                      </Form.Group>\n                    </Accordion.Body>\n                  </Accordion.Item>\n                  <Accordion.Item eventKey=\"3\">\n                    <Accordion.Header>\n                      <PrimaryText size=\"1.5rem\" weight=\"400\">\n                        Social Network Links\n                      </PrimaryText>\n                    </Accordion.Header>\n                    <Accordion.Body>\n                      <Form.Group className=\"mb-3\">\n                        <Row>\n                          <Col sm={2}>\n                            <Form.Label>\n                              <i class=\"fab fa-twitter fa-2x\" />\n                            </Form.Label>\n                          </Col>\n                          <Col sm={10}>\n                            <Form.Control\n                              type=\"text\"\n                              placeholder=\"Twitter URL\"\n                              name=\"twitter\"\n                              value={twitter}\n                              onChange={(e) => onChange(e)}\n                            />\n                          </Col>\n                        </Row>\n                      </Form.Group>\n                      <Form.Group className=\"mb-3\">\n                        <Row>\n                          <Col sm={2}>\n                            <Form.Label>\n                              <i class=\"fab fa-facebook fa-2x\" />\n                            </Form.Label>\n                          </Col>\n                          <Col sm={10}>\n                            <Form.Control\n                              type=\"text\"\n                              placeholder=\"Facebook URL\"\n                              name=\"facebook\"\n                              value={facebook}\n                              onChange={(e) => onChange(e)}\n                            />\n                          </Col>\n                        </Row>\n                      </Form.Group>\n                      <Form.Group className=\"mb-3\">\n                        <Row>\n                          <Col sm={2}>\n                            <Form.Label>\n                              <i class=\"fab fa-youtube fa-2x\" />\n                            </Form.Label>\n                          </Col>\n                          <Col sm={10}>\n                            <Form.Control\n                              type=\"text\"\n                              placeholder=\"YouTube URL\"\n                              name=\"youtube\"\n                              value={youtube}\n                              onChange={(e) => onChange(e)}\n                            />\n                          </Col>\n                        </Row>\n                      </Form.Group>\n                      <Form.Group className=\"mb-3\">\n                        <Row>\n                          <Col sm={2}>\n                            <Form.Label>\n                              <i class=\"fab fa-linkedin fa-2x\" />\n                            </Form.Label>\n                          </Col>\n                          <Col sm={10}>\n                            <Form.Control\n                              type=\"text\"\n                              placeholder=\"Linkedin URL\"\n                              name=\"linkedin\"\n                              value={linkedin}\n                              onChange={(e) => onChange(e)}\n                            />\n                          </Col>\n                        </Row>\n                      </Form.Group>\n                      <Form.Group className=\"mb-3\">\n                        <Row>\n                          <Col sm={2}>\n                            <Form.Label>\n                              <i class=\"fab fa-instagram fa-2x\" />\n                            </Form.Label>\n                          </Col>\n                          <Col sm={10}>\n                            <Form.Control\n                              type=\"text\"\n                              placeholder=\"Instagram URL\"\n                              name=\"instagram\"\n                              value={instagram}\n                              onChange={(e) => onChange(e)}\n                            />\n                          </Col>\n                        </Row>\n                      </Form.Group>\n                    </Accordion.Body>\n                  </Accordion.Item>\n                </Accordion>\n\n                <Container className=\"my-3 d-grid text-center\">\n                  <Button variant=\"primary\" size=\"lg\" type=\"submit\">\n                    Submit\n                  </Button>\n                </Container>\n              </Form>\n              {/* End of our form */}\n            </Card.Body>\n          </Card>\n        </>\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nCreateProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n};\n\nexport default connect(mapStateToProps, { createProfile })(\n  withRouter(CreateProfile)\n);\n","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/profile-forms/AddExperience.js",["275","276","277","278"],"import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { addExperience } from \"../../actions/profile\";\nimport { Button, Card, Container, Form, Row, Col } from \"react-bootstrap\";\nimport {\n  Header,\n  Text,\n  PrimaryText,\n  SecondaryButton,\n  PlainLink,\n  PrimaryButton,\n} from \"../../utils/styledComponents\";\n\nconst AddExperience = ({ addExperience, history }) => {\n  const [formData, setFormData] = useState({\n    title: \"\",\n    school: \"\",\n    location: \"\",\n    from: \"\",\n    to: \"\",\n    current: false,\n    description: \"\",\n  });\n\n  const [toDateDisabled, toggleDisabled] = useState(false);\n\n  const { title, school, location, from, to, current, description } = formData;\n\n  const onChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n  return (\n    <>\n      <Container>\n        <Card className=\"my-5 p-4 d-flex align-items-center\">\n          <PrimaryText size=\"2rem\" weight=\"900\">\n            Add An Experience\n          </PrimaryText>\n          Add any teaching experience that you have had in the past\n          <small>* = required field</small>\n          <Form\n            style={{ minWidth: \"80%\" }}\n            onSubmit={(e) => {\n              e.preventDefault();\n              addExperience(formData, history);\n            }}\n          >\n            <Form.Group className=\"mb-3\" controlId=\"school\">\n              <Form.Label>Job Title</Form.Label>\n              <Form.Control\n                value={title}\n                onChange={(e) => onChange(e)}\n                type=\"text\"\n                placeholder=\"* Job Title\"\n                name=\"title\"\n                required\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"degree\">\n              <Form.Label>School / Company</Form.Label>\n              <Form.Control\n                value={school}\n                onChange={(e) => onChange(e)}\n                type=\"text\"\n                placeholder=\"* School\"\n                name=\"school\"\n                required\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"fieldofstudy\">\n              <Form.Label>Location</Form.Label>\n              <Form.Control\n                value={location}\n                onChange={(e) => onChange(e)}\n                type=\"text\"\n                placeholder=\"Location\"\n                name=\"location\"\n              />\n            </Form.Group>\n\n            <Row className=\"mb-3 py-2\">\n              <Form.Group as={Col} controlId=\"from\">\n                <Form.Label>From Date</Form.Label>\n                <Form.Control\n                  value={from}\n                  onChange={(e) => onChange(e)}\n                  type=\"date\"\n                  name=\"from\"\n                />\n              </Form.Group>\n\n              <Form.Group as={Col} controlId=\"to\">\n                <Form.Label>To Date</Form.Label>\n                <Form.Control\n                  value={to}\n                  onChange={(e) => onChange(e)}\n                  type=\"date\"\n                  name=\"to\"\n                  disabled={toDateDisabled ? \"disabled\" : \"\"}\n                />\n              </Form.Group>\n            </Row>\n            <Form.Group className=\"mb-3\" id=\"current\">\n              <Form.Check\n                value={current}\n                checked={current}\n                onChange={(e) => {\n                  setFormData({ ...formData, current: !current });\n                  toggleDisabled((toDateDisabled) => !toDateDisabled);\n                }}\n                type=\"checkbox\"\n                name=\"current\"\n                label=\"Current job\"\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"description\">\n              <Form.Label>Example textarea</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                value={description}\n                onChange={(e) => onChange(e)}\n                name=\"description\"\n                rows={5}\n                placeholder=\"Job Description\"\n              />\n            </Form.Group>\n\n            <div className=\"d-grid\">\n              <PrimaryButton type=\"submit\">Submit </PrimaryButton>\n            </div>\n          </Form>\n        </Card>\n\n        <PlainLink to=\"/dashboard\">\n          <div className=\"d-grid py-3\">\n            <SecondaryButton fontSize=\"1.5rem\">Go back</SecondaryButton>\n          </div>\n        </PlainLink>\n      </Container>\n    </>\n  );\n};\n\nAddExperience.propTypes = {\n  addExperience: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addExperience })(withRouter(AddExperience));\n","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/profile-forms/EditProfile.js",["279","280","281","282","283","284"],"import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { createProfile, getCurrentProfile } from \"../../actions/profile\";\nimport ChooseAvatar from \"./ChooseAvatar\";\nimport ProfileImage from \"../layout/ProfileImage\";\nimport {\n  Header,\n  Text,\n  PrimaryText,\n  StyledLink,\n  PlainLink,\n  SecondaryButton,\n  PrimaryButton,\n} from \"../../utils/styledComponents\";\n\nimport {\n  Accordion,\n  Button,\n  Card,\n  Container,\n  Form,\n  Row,\n  Col,\n} from \"react-bootstrap\";\n\nconst initialState = {\n  sex: \"\",\n  nationality: \"\",\n  avatar: \"\",\n  status: \"\",\n  school: \"\",\n  location: \"\",\n  yearsofexperience: \"\",\n  bio: \"\",\n  phone: \"\",\n  email: \"\",\n  wechat: \"\",\n  twitter: \"\",\n  facebook: \"\",\n  linkedin: \"\",\n  youtube: \"\",\n  instagram: \"\",\n};\n\nconst EditProfile = ({\n  auth: { user },\n  profile: { profile, loading },\n  createProfile,\n  getCurrentProfile,\n  history,\n}) => {\n  const [formData, setFormData] = useState(initialState);\n\n  const [toggleModal, setToggleModal] = useState(false);\n\n  useEffect(() => {\n    getCurrentProfile();\n\n    setFormData({\n      sex: loading || !profile.sex ? \"\" : profile.sex,\n      nationality: loading || !profile.nationality ? \"\" : profile.nationality,\n      avatar: loading || !profile.avatar ? \"\" : profile.avatar,\n      yearsofexperience:\n        loading || !profile.yearsofexperience ? \"\" : profile.yearsofexperience,\n      school: loading || !profile.school ? \"\" : profile.school,\n      location: loading || !profile.location ? \"\" : profile.location,\n      status: loading || !profile.status ? \"\" : profile.status,\n      bio: loading || !profile.bio ? \"\" : profile.bio,\n      phone: loading || !profile.phone ? \"\" : profile.phone,\n      wechat: loading || !profile.wechat ? \"\" : profile.wechat,\n      email: loading || !profile.email ? \"\" : profile.email,\n      twitter: loading || !profile.social.twitter ? \"\" : profile.social.twitter,\n      facebook:\n        loading || !profile.social.facebook ? \"\" : profile.social.facebook,\n      linkedin:\n        loading || !profile.social.linkedin ? \"\" : profile.social.linkedin,\n      youtube: loading || !profile.social.youtube ? \"\" : profile.social.youtube,\n      instagram:\n        loading || !profile.social.instagram ? \"\" : profile.social.instagram,\n    });\n\n    // We want to automatically fill out the form with the existing information that we get from getCurrentProfile()\n  }, [loading, getCurrentProfile]);\n\n  const onToggleModal = () => setToggleModal((toggleModal) => !toggleModal);\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    createProfile(formData, history, true);\n  };\n\n  const {\n    sex,\n\n    nationality,\n    avatar,\n    school,\n    location,\n    status,\n    yearsofexperience,\n    bio,\n    phone,\n    email,\n    wechat,\n    twitter,\n    facebook,\n    linkedin,\n    youtube,\n    instagram,\n  } = formData;\n\n  const changeAvatar = (newAvatar) => {\n    setFormData({\n      ...formData,\n      avatar: newAvatar,\n    });\n  };\n\n  return (\n    <>\n      {toggleModal ? (\n        <ChooseAvatar\n          toggleModal={toggleModal}\n          changeAvatar={(newAvatar) => changeAvatar(newAvatar)}\n          setToggleModal={() => setToggleModal((toggleModal) => !toggleModal)}\n        />\n      ) : (\n        // passing down the function as a prop, it will be now possible\n        // to call it from the Child component using\n        // () => setToggleModal\n\n        <>\n          <Header>\n            <Text color=\"#41a0b3\" size=\"2rem\">\n              Edit your profile\n            </Text>\n            <Text size=\"1.2rem\">\n              Let's get some information to make your profile stand out\n            </Text>\n          </Header>\n          <Card\n            style={{\n              margin: \"2rem 0rem 2rem 0rem\",\n              border: \"2px #41A0B3 solid\",\n            }}\n          >\n            <Card.Header\n              style={{\n                backgroundColor: \"#D7E8EB\",\n                borderRadius: \"1rem 1rem 0rem 0rem\",\n              }}\n            >\n              {\" \"}\n              <div className=\"d-flex flex-column align-items-center\">\n                <a onClick={onToggleModal}>\n                  <ProfileImage\n                    image={avatar && avatar}\n                    name={\n                      user.name\n                        ? user.name\n                        : \"https://i.redd.it/nelbkt3zi0m31.png\"\n                    }\n                  />\n                </a>\n                <Text size=\"2rem\" weight=\"400\">\n                  {user && user.name}\n                </Text>\n              </div>\n            </Card.Header>\n            <Card.Body>\n              {/* Start of our form */}\n              <Form onSubmit={(e) => onSubmit(e)}>\n                <Accordion flush>\n                  <Accordion.Item eventKey=\"1\">\n                    <Accordion.Header>\n                      <PrimaryText size=\"1.5rem\" weight=\"400\">\n                        User Info\n                      </PrimaryText>\n                    </Accordion.Header>\n                    <Accordion.Body>\n                      <Form.Group className=\"mb-3\">\n                        <Form.Label>Sex</Form.Label>\n                        <div className=\"d-flex d-row\">\n                          <Form.Check\n                            type=\"checkbox\"\n                            name=\"sex\"\n                            id=\"male\"\n                            label=\"Male\"\n                            value=\"male\"\n                            onChange={(e) => onChange(e)}\n                          />\n\n                          <Form.Check\n                            type=\"checkbox\"\n                            name=\"sex\"\n                            label=\"Female\"\n                            id=\"female\"\n                            value=\"female\"\n                            onChange={(e) => onChange(e)}\n                          />\n                        </div>\n                      </Form.Group>\n                      <Form.Group className=\"mb-3\">\n                        <Form.Label>Nationality</Form.Label>\n                        <Form.Select\n                          name=\"nationality\"\n                          value={nationality}\n                          onChange={(e) => onChange(e)}\n                        >\n                          <option>Afghanistan</option>\n                          <option>Albania</option>\n                          <option>Algeria</option>\n                          <option>Andorra</option>\n                          <option>Angola</option>\n                          <option>Antigua and Barbuda</option>\n                          <option>Argentina</option>\n                          <option>Armenia</option>\n                          <option>Aruba</option>\n                          <option>Australia</option>\n                          <option>Austria</option>\n                          <option>Azerbaijan</option>\n                          <option>Bahamas, The</option>\n                          <option>Bahrain</option>\n                          <option>Bangladesh</option>\n                          <option>Barbados</option>\n                          <option>Belarus</option>\n                          <option>Belgium</option>\n                          <option>Belize</option>\n                          <option>Benin</option>\n                          <option>Bhutan</option>\n                          <option>Bolivia</option>\n                          <option>Bosnia and Herzegovina</option>\n                          <option>Botswana</option>\n                          <option>Brazil</option>\n                          <option>Brunei</option>\n                          <option>Bulgaria</option>\n                          <option>Burkina Faso</option>\n                          <option>Burma</option>\n                          <option>Burundi</option>\n                          <option>Cambodia</option>\n                          <option>Cameroon</option>\n                          <option>Canada</option>\n                          <option>Cabo Verde</option>\n                          <option>Central African Republic</option>\n                          <option>Chad</option>\n                          <option>Chile</option>\n                          <option>China</option>\n                          <option>Colombia</option>\n                          <option>Comoros</option>\n                          <option>Congo, Democratic Republic of the</option>\n                          <option>Congo, Republic of the</option>\n                          <option>Costa Rica</option>\n                          <option>Cote d'Ivoire</option>\n                          <option>Croatia</option>\n                          <option>Cuba</option>\n                          <option>Curacao</option>\n                          <option>Cyprus</option>\n                          <option>Czech Republic</option>\n                          <option>Denmark</option>\n                          <option>Djibouti</option>\n                          <option>Dominica</option>\n                          <option>Dominican Republic</option>\n                          <option>East Timor (see Timor-Leste)</option>\n                          <option>Ecuador</option>\n                          <option>Egypt</option>\n                          <option>El Salvador</option>\n                          <option>Equatorial Guinea</option>\n                          <option>Eritrea</option>\n                          <option>Estonia</option>\n                          <option>Ethiopia</option>\n                          <option>Fiji</option>\n                          <option>Finland</option>\n                          <option>France</option>\n                          <option>Gabon</option>\n                          <option>Gambia, The</option>\n                          <option>Georgia</option>\n                          <option>Germany</option>\n                          <option>Ghana</option>\n                          <option>Greece</option>\n                          <option>Grenada</option>\n                          <option>Guatemala</option>\n                          <option>Guinea</option>\n                          <option>Guinea-Bissau</option>\n                          <option>Guyana</option>\n                          <option>Haiti</option>\n                          <option>Holy See</option>\n                          <option>Honduras</option>\n                          <option>Hong Kong</option>\n                          <option>Hungary</option>\n                          <option>Iceland</option>\n                          <option>India</option>\n                          <option>Indonesia</option>\n                          <option>Iran</option>\n                          <option>Iraq</option>\n                          <option>Ireland</option>\n                          <option>Israel</option>\n                          <option>Italy</option>\n                          <option>Jamaica</option>\n                          <option>Japan</option>\n                          <option>Jordan</option>\n                          <option>Kazakhstan</option>\n                          <option>Kenya</option>\n                          <option>Kiribati</option>\n                          <option>Korea, North</option>\n                          <option>Korea, South</option>\n                          <option>Kosovo</option>\n                          <option>Kuwait</option>\n                          <option>Kyrgyzstan</option>\n                          <option>Laos</option>\n                          <option>Latvia</option>\n                          <option>Lebanon</option>\n                          <option>Lesotho</option>\n                          <option>Liberia</option>\n                          <option>Libya</option>\n                          <option>Liechtenstein</option>\n                          <option>Lithuania</option>\n                          <option>Luxembourg</option>\n                          <option>Macau</option>\n                          <option>Macedonia</option>\n                          <option>Madagascar</option>\n                          <option>Malawi</option>\n                          <option>Malaysia</option>\n                          <option>Maldives</option>\n                          <option>Mali</option>\n                          <option>Malta</option>\n                          <option>Marshall Islands</option>\n                          <option>Mauritania</option>\n                          <option>Mauritius</option>\n                          <option>Mexico</option>\n                          <option>Micronesia</option>\n                          <option>Moldova</option>\n                          <option>Monaco</option>\n                          <option>Mongolia</option>\n                          <option>Montenegro</option>\n                          <option>Morocco</option>\n                          <option>Mozambique</option>\n                          <option>Namibia</option>\n                          <option>Nauru</option>\n                          <option>Nepal</option>\n                          <option>Netherlands</option>\n                          <option>New Zealand</option>\n                          <option>Nicaragua</option>\n                          <option>Niger</option>\n                          <option>Nigeria</option>\n                          <option>North Korea</option>\n                          <option>Norway</option>\n                          <option>Oman</option>\n                          <option>Pakistan</option>\n                          <option>Palau</option>\n                          <option>Palestinian Territories</option>\n                          <option>Panama</option>\n                          <option>Papua New Guinea</option>\n                          <option>Paraguay</option>\n                          <option>Peru</option>\n                          <option>Philippines</option>\n                          <option>Poland</option>\n                          <option>Portugal</option>\n                          <option>Qatar</option>\n                          <option>Romania</option>\n                          <option>Russia</option>\n                          <option>Rwanda</option>\n                          <option>Saint Kitts and Nevis</option>\n                          <option>Saint Lucia</option>\n                          <option>Saint Vincent and the Grenadines</option>\n                          <option>Samoa</option>\n                          <option>San Marino</option>\n                          <option>Sao Tome and Principe</option>\n                          <option>Saudi Arabia</option>\n                          <option>Senegal</option>\n                          <option>Serbia</option>\n                          <option>Seychelles</option>\n                          <option>Sierra Leone</option>\n                          <option>Singapore</option>\n                          <option>Sint Maarten</option>\n                          <option>Slovakia</option>\n                          <option>Slovenia</option>\n                          <option>Solomon Islands</option>\n                          <option>Somalia</option>\n                          <option>South Africa</option>\n                          <option>South Korea</option>\n                          <option>South Sudan</option>\n                          <option>Spain</option>\n                          <option>Sri Lanka</option>\n                          <option>Sudan</option>\n                          <option>Suriname</option>\n                          <option>Swaziland</option>\n                          <option>Sweden</option>\n                          <option>Switzerland</option>\n                          <option>Syria</option>\n                          <option>Taiwan</option>\n                          <option>Tajikistan</option>\n                          <option>Tanzania</option>\n                          <option>Thailand</option>\n                          <option>Timor-Leste</option>\n                          <option>Togo</option>\n                          <option>Tonga</option>\n                          <option>Trinidad and Tobago</option>\n                          <option>Tunisia</option>\n                          <option>Turkey</option>\n                          <option>Turkmenistan</option>\n                          <option>Tuvalu</option>\n                          <option>Uganda</option>\n                          <option>Ukraine</option>\n                          <option>United Arab Emirates</option>\n                          <option>United Kingdom</option>\n                          <option>Uruguay</option>\n                          <option>Uzbekistan</option>\n                          <option>Vanuatu</option>\n                          <option>Venezuela</option>\n                          <option>Vietnam</option>\n                          <option>Yemen</option>\n                          <option>Zambia</option>\n                          <option>Zimbabwe</option>\n                        </Form.Select>\n                      </Form.Group>\n                      <Form.Group className=\"mb-3\">\n                        <Form.Label>Location</Form.Label>\n                        <Form.Select\n                          name=\"location\"\n                          value={location}\n                          onChange={(e) => onChange(e)}\n                        >\n                          <option class=\"province\" disabled>\n                            Anhui (Province)\n                          </option>\n                          <option>Anqing</option>\n                          <option>Bengbu</option>\n                          <option>Hefei</option>\n                          <option>Huainan</option>\n                          <option>Huangshan</option>\n                          <option>Ma’anshan</option>\n                          <option>Shexian</option>\n                          <option>Tongcheng</option>\n                          <option>Tongling</option>\n                          <option>Wuhu</option>\n                          <option>Xuancheng</option>\n                          <option class=\"province\" disabled>\n                            Beijing (Provincial-Level Municipality, Capital)\n                          </option>\n                          <option>Beijing</option>\n                          <option class=\"province\" disabled>\n                            Chongqing (Provincial-Level Municipality)\n                          </option>\n                          <option>Chongqing</option>\n                          <option>Hechuan</option>\n                          <option>Wanzhou</option>\n                          <option class=\"province\" disabled>\n                            Fujian (Province)\n                          </option>\n                          <option>Fuzhou</option>\n                          <option>Longyan</option>\n                          <option>Nanping</option>\n                          <option>Quanzhou</option>\n                          <option>Sanming</option>\n                          <option>Shaowu</option>\n                          <option>Xiamen</option>\n                          <option>Yong’an</option>\n                          <option>Zhangzhou</option>\n                          <option class=\"province\" disabled>\n                            Gansu (Province)\n                          </option>\n                          <option>Dunhuang</option>\n                          <option>Jiuquan</option>\n                          <option>Lanzhou</option>\n                          <option>Pingliang</option>\n                          <option>Tianshui</option>\n                          <option>Wuwei</option>\n                          <option>Yumen</option>\n                          <option class=\"province\" disabled>\n                            Guangdong (Province)\n                          </option>\n                          <option>Chaozhou</option>\n                          <option>Foshan</option>\n                          <option>Guangzhou</option>\n                          <option>Jiangmen</option>\n                          <option>Maoming</option>\n                          <option>Meizhou</option>\n                          <option>Shantou</option>\n                          <option>Shaoguan</option>\n                          <option>Shenzhen</option>\n                          <option>Zhanjiang</option>\n                          <option>Zhaoqing</option>\n                          <option>Zhongshan</option>\n                          <option class=\"province\" disabled>\n                            Guangxi (Autonomous Region)\n                          </option>\n                          <option>Baise</option>\n                          <option>Beihai</option>\n                          <option>Guilin</option>\n                          <option>Liuzhou</option>\n                          <option>Nanning</option>\n                          <option>Pingxiang</option>\n                          <option>Wuzhou</option>\n                          <option>Yulin</option>\n                          <option class=\"province\" disabled>\n                            Guizhou (Province)\n                          </option>\n                          <option>Anshun</option>\n                          <option>Duyun</option>\n                          <option>Guiyang</option>\n                          <option>Zunyi</option>\n                          <option class=\"province\" disabled>\n                            Hainan (Province)\n                          </option>\n                          <option>Haikou</option>\n                          <option class=\"province\" disabled>\n                            Hebei (Province)\n                          </option>\n                          <option>Baoding</option>\n                          <option>Cangzhou</option>\n                          <option>Chengde</option>\n                          <option>Handan</option>\n                          <option>Kalgan</option>\n                          <option>Qinhuangdao</option>\n                          <option>Shanhaiguan</option>\n                          <option>Shijiazhuang</option>\n                          <option>Tangshan</option>\n                          <option>Xingtai</option>\n                          <option>Xuanhua</option>\n                          <option>Zhengding</option>\n                          <option class=\"province\" disabled>\n                            Heilongjiang (Province)\n                          </option>\n                          <option>Acheng</option>\n                          <option>Binxian</option>\n                          <option>Harbin</option>\n                          <option>Hegang</option>\n                          <option>Hulan</option>\n                          <option>Jiamusi</option>\n                          <option>Jixi</option>\n                          <option>Mudanjiang</option>\n                          <option>Qiqihar</option>\n                          <option>Shuangyashan</option>\n                          <option>Yichun</option>\n                          <option class=\"province\" disabled>\n                            Henan (Province)\n                          </option>\n                          <option>Anyang</option>\n                          <option>Hebi</option>\n                          <option>Jiaozuo</option>\n                          <option>Kaifeng</option>\n                          <option>Luohe</option>\n                          <option>Luoyang</option>\n                          <option>Nanyang</option>\n                          <option>Shangqiu</option>\n                          <option>Xinxiang</option>\n                          <option>Xinyang</option>\n                          <option>Xuchang</option>\n                          <option>Zhengzhou</option>\n                          <option>Zhoukou</option>\n                          <option class=\"province\" disabled>\n                            Hong Kong (Special Administrative Region)\n                          </option>\n                          <option>Hong Kong</option>\n                          <option>Victoria</option>\n                          <option class=\"province\" disabled>\n                            Hubei (Province)\n                          </option>\n                          <option>Daye</option>\n                          <option>Hankou</option>\n                          <option>Hanyang</option>\n                          <option>Huangshi</option>\n                          <option>Jingzhou</option>\n                          <option>Laohekou</option>\n                          <option>Wuchang</option>\n                          <option>Wuhan</option>\n                          <option>Xiangfan</option>\n                          <option>Yichang</option>\n                          <option class=\"province\" disabled>\n                            Hunan (Province)\n                          </option>\n                          <option>Changde</option>\n                          <option>Changsha</option>\n                          <option>Hengyang</option>\n                          <option>Jinshi</option>\n                          <option>Shaoyang</option>\n                          <option>Xiangtan</option>\n                          <option>Yiyang</option>\n                          <option>Yueyang</option>\n                          <option>Zhuzhou</option>\n                          <option class=\"province\" disabled>\n                            Inner Mongolia (Autonomous Region)\n                          </option>\n                          <option>Baotou</option>\n                          <option>Chifeng</option>\n                          <option>Duolun</option>\n                          <option>Erenhot</option>\n                          <option>Hailar</option>\n                          <option>Hohhot</option>\n                          <option>Jining</option>\n                          <option>Manzhouli</option>\n                          <option>Tongliao</option>\n                          <option class=\"province\" disabled>\n                            Jiangsu (Province)\n                          </option>\n                          <option>Changshu</option>\n                          <option>Changzhou</option>\n                          <option>Huai’an</option>\n                          <option>Huaiyin</option>\n                          <option>Lianyungang</option>\n                          <option>Nanjing</option>\n                          <option>Nantong</option>\n                          <option>Suzhou</option>\n                          <option>Taizhou</option>\n                          <option>Wuxi</option>\n                          <option>Xuzhou</option>\n                          <option>Yancheng</option>\n                          <option>Yangzhou</option>\n                          <option>Zhenjiang</option>\n                          <option class=\"province\" disabled>\n                            Jiangxi (Province)\n                          </option>\n                          <option>Ganzhou</option>\n                          <option>Ji’an</option>\n                          <option>Jingdezhen</option>\n                          <option>Jiujiang</option>\n                          <option>Nanchang</option>\n                          <option>Pingxiang</option>\n                          <option>Shangrao</option>\n                          <option>Zhangshu</option>\n                          <option class=\"province\" disabled>\n                            Jilin (Province)\n                          </option>\n                          <option>Baicheng</option>\n                          <option>Changchun</option>\n                          <option>Jilin</option>\n                          <option>Liaoyuan</option>\n                          <option>Siping</option>\n                          <option>Tonghua</option>\n                          <option>Yanji</option>\n                          <option class=\"province\" disabled>\n                            Liaoning (Province)\n                          </option>\n                          <option>Anshan</option>\n                          <option>Beipiao</option>\n                          <option>Benxi</option>\n                          <option>Dalian</option>\n                          <option>Dandong</option>\n                          <option>Fushun</option>\n                          <option>Fuxin</option>\n                          <option>Jinzhou (southern Liaoning)</option>\n                          <option>Jinzhou (western Liaoning)</option>\n                          <option>Liaoyang</option>\n                          <option>Lüshun</option>\n                          <option>Shenyang</option>\n                          <option>Wafangdian</option>\n                          <option>Yingkou</option>\n                          <option class=\"province\" disabled>\n                            Macau (Special Administrative Region)\n                          </option>\n                          <option>Macau</option>\n                          <option class=\"province\" disabled>\n                            Ningxia (Autonomous Region)\n                          </option>\n                          <option>Yinchuan</option>\n                          <option class=\"province\" disabled>\n                            Qinghai (Province)\n                          </option>\n                          <option>Golmud</option>\n                          <option>Lenghu</option>\n                          <option>Xining</option>\n                          <option class=\"province\" disabled>\n                            Shaanxi (Province)\n                          </option>\n                          <option>Ankang</option>\n                          <option>Baoji</option>\n                          <option>Hanzhong</option>\n                          <option>Shangluo</option>\n                          <option>Tongguan</option>\n                          <option>Xi’an</option>\n                          <option>Xianyang</option>\n                          <option>Yan’an</option>\n                          <option class=\"province\" disabled>\n                            Shandong (Province)\n                          </option>\n                          <option>Dezhou</option>\n                          <option>Jinan</option>\n                          <option>Jining</option>\n                          <option>Linzi</option>\n                          <option>Qingdao</option>\n                          <option>Qufu</option>\n                          <option>Weifang</option>\n                          <option>Weihai</option>\n                          <option>Yantai</option>\n                          <option>Zaozhuang</option>\n                          <option>Zibo</option>\n                          <option class=\"province\" disabled>\n                            Shanghai (Provincial-Level Municipality)\n                          </option>\n                          <option>Shanghai</option>\n                          <option class=\"province\" disabled>\n                            Shanxi (Province)\n                          </option>\n                          <option>Changzhi</option>\n                          <option>Datong</option>\n                          <option>Jinzhong</option>\n                          <option>Linfen</option>\n                          <option>Puzhou</option>\n                          <option>Taiyuan</option>\n                          <option>Yangquan</option>\n                          <option class=\"province\" disabled>\n                            Sichuan (Province)\n                          </option>\n                          <option>Chengdu</option>\n                          <option>Kangding</option>\n                          <option>Luzhou</option>\n                          <option>Mianyang</option>\n                          <option>Nanchong</option>\n                          <option>Neijiang</option>\n                          <option>Wutongqiao</option>\n                          <option>Ya’an</option>\n                          <option>Yibin</option>\n                          <option>Zigong</option>\n                          <option class=\"province\" disabled>\n                            Tianjin (Provincial-Level Municipality)\n                          </option>\n                          <option>Tanggu</option>\n                          <option>Tianjin</option>\n                          <option>Tibet (Autonomous Region)</option>\n                          <option>Gartok</option>\n                          <option>Gyangzê</option>\n                          <option>Lhasa</option>\n                          <option>Xigazê</option>\n                          <option class=\"province\" disabled>\n                            Xinjiang (Autonomous Region)\n                          </option>\n                          <option>Hami</option>\n                          <option>Hotan</option>\n                          <option>Karamay</option>\n                          <option>Kashgar</option>\n                          <option>Kucha</option>\n                          <option>Kuldja</option>\n                          <option>Shihezi</option>\n                          <option>Turfan</option>\n                          <option>Ürümqi</option>\n                          <option>Yarkand</option>\n                          <option class=\"province\" disabled>\n                            Yunnan (Province)\n                          </option>\n                          <option>Dali</option>\n                          <option>Gejiu</option>\n                          <option>Jinghong</option>\n                          <option>Kaiyuan</option>\n                          <option>Kunming</option>\n                          <option>Pu’er</option>\n                          <option class=\"province\" disabled>\n                            Zhejiang (Province)\n                          </option>\n                          <option>Fenghua</option>\n                          <option>Hangzhou</option>\n                          <option>Huzhou</option>\n                          <option>Jiaxing</option>\n                          <option>Jinhua</option>\n                          <option>Ningbo</option>\n                          <option>Quzhou</option>\n                          <option>Shaoxing</option>\n                          <option>Wenzhou</option>\n                        </Form.Select>\n                      </Form.Group>\n                      <Form.Group className=\"mb-3\">\n                        <Form.Label>School name</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"School\"\n                          name=\"school\"\n                          value={school}\n                          onChange={(e) => onChange(e)}\n                        />\n                      </Form.Group>\n                      <Form.Group className=\"mb-3\">\n                        <Form.Label>Position</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"* EAL teacher, Math / Physics teacher, etc.\"\n                          name=\"status\"\n                          value={status}\n                          onChange={(e) => onChange(e)}\n                        />\n                      </Form.Group>\n                      <Form.Group className=\"mb-3\">\n                        <Form.Label>Years of experience</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"\"\n                          name=\"yearsofexperience\"\n                          value={yearsofexperience}\n                          onChange={(e) => onChange(e)}\n                        />\n                      </Form.Group>\n                      <Form.Group className=\"mb-3\">\n                        <Form.Label>Bio</Form.Label>\n                        <Form.Control\n                          as=\"textarea\"\n                          placeholder=\"A short bio of yourself\"\n                          name=\"bio\"\n                          value={bio}\n                          onChange={(e) => onChange(e)}\n                        />\n                      </Form.Group>\n                    </Accordion.Body>\n                  </Accordion.Item>\n                  <Accordion.Item eventKey=\"2\">\n                    <Accordion.Header>\n                      <PrimaryText size=\"1.5rem\" weight=\"400\">\n                        Contact Info\n                      </PrimaryText>\n                    </Accordion.Header>\n                    <Accordion.Body>\n                      <Form.Group className=\"mb-3\">\n                        <Form.Label>Wechat ID</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"\"\n                          name=\"wechat\"\n                          value={wechat}\n                          onChange={(e) => onChange(e)}\n                        />\n                      </Form.Group>\n                      <Form.Group className=\"mb-3\">\n                        <Form.Label>Work number</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"\"\n                          name=\"phone\"\n                          value={phone}\n                          onChange={(e) => onChange(e)}\n                        />\n                      </Form.Group>\n                      <Form.Group className=\"mb-3\">\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"\"\n                          name=\"email\"\n                          value={email}\n                          onChange={(e) => onChange(e)}\n                        />\n                      </Form.Group>\n                    </Accordion.Body>\n                  </Accordion.Item>\n                  <Accordion.Item eventKey=\"3\">\n                    <Accordion.Header>\n                      <PrimaryText size=\"1.5rem\" weight=\"400\">\n                        Social Network Links\n                      </PrimaryText>\n                    </Accordion.Header>\n                    <Accordion.Body>\n                      <Form.Group className=\"mb-3\">\n                        <Row>\n                          <Col sm={2}>\n                            <Form.Label>\n                              <i class=\"fab fa-twitter fa-2x\" />\n                            </Form.Label>\n                          </Col>\n                          <Col sm={10}>\n                            <Form.Control\n                              type=\"text\"\n                              placeholder=\"Twitter URL\"\n                              name=\"twitter\"\n                              value={twitter}\n                              onChange={(e) => onChange(e)}\n                            />\n                          </Col>\n                        </Row>\n                      </Form.Group>\n                      <Form.Group className=\"mb-3\">\n                        <Row>\n                          <Col sm={2}>\n                            <Form.Label>\n                              <i class=\"fab fa-facebook fa-2x\" />\n                            </Form.Label>\n                          </Col>\n                          <Col sm={10}>\n                            <Form.Control\n                              type=\"text\"\n                              placeholder=\"Facebook URL\"\n                              name=\"facebook\"\n                              value={facebook}\n                              onChange={(e) => onChange(e)}\n                            />\n                          </Col>\n                        </Row>\n                      </Form.Group>\n                      <Form.Group className=\"mb-3\">\n                        <Row>\n                          <Col sm={2}>\n                            <Form.Label>\n                              <i class=\"fab fa-youtube fa-2x\" />\n                            </Form.Label>\n                          </Col>\n                          <Col sm={10}>\n                            <Form.Control\n                              type=\"text\"\n                              placeholder=\"YouTube URL\"\n                              name=\"youtube\"\n                              value={youtube}\n                              onChange={(e) => onChange(e)}\n                            />\n                          </Col>\n                        </Row>\n                      </Form.Group>\n                      <Form.Group className=\"mb-3\">\n                        <Row>\n                          <Col sm={2}>\n                            <Form.Label>\n                              <i class=\"fab fa-linkedin fa-2x\" />\n                            </Form.Label>\n                          </Col>\n                          <Col sm={10}>\n                            <Form.Control\n                              type=\"text\"\n                              placeholder=\"Linkedin URL\"\n                              name=\"linkedin\"\n                              value={linkedin}\n                              onChange={(e) => onChange(e)}\n                            />\n                          </Col>\n                        </Row>\n                      </Form.Group>\n                      <Form.Group className=\"mb-3\">\n                        <Row>\n                          <Col sm={2}>\n                            <Form.Label>\n                              <i class=\"fab fa-instagram fa-2x\" />\n                            </Form.Label>\n                          </Col>\n                          <Col sm={10}>\n                            <Form.Control\n                              type=\"text\"\n                              placeholder=\"Instagram URL\"\n                              name=\"instagram\"\n                              value={instagram}\n                              onChange={(e) => onChange(e)}\n                            />\n                          </Col>\n                        </Row>\n                      </Form.Group>\n                    </Accordion.Body>\n                  </Accordion.Item>\n                </Accordion>\n\n                <Container className=\"my-3 d-grid text-center\">\n                  <PrimaryButton size=\"lg\" type=\"submit\">\n                    Submit\n                  </PrimaryButton>\n                </Container>\n              </Form>\n              {/* End of our form */}\n            </Card.Body>\n          </Card>\n\n          <Container>\n            <PlainLink to=\"/dashboard\">\n              <div className=\"d-grid py-3\">\n                <SecondaryButton fontSize=\"1.5rem\">Go back</SecondaryButton>\n              </div>\n            </PlainLink>\n          </Container>\n        </>\n      )}\n    </>\n  );\n};\n\nEditProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\n  withRouter(EditProfile)\n);\n","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/profile-forms/AddEducation.js",["285","286","287"],"import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { addEducation } from \"../../actions/profile\";\nimport {\n  Text,\n  PrimaryText,\n  SecondaryButton,\n  PlainLink,\n  PrimaryButton,\n} from \"../../utils/styledComponents\";\n\nimport { Button, Card, Container, Form, Row, Col } from \"react-bootstrap\";\n\nconst AddEducation = ({ addEducation, history }) => {\n  const [formData, setFormData] = useState({\n    school: \"\",\n    degree: \"\",\n    fieldofstudy: \"\",\n    from: \"\",\n    to: \"\",\n    current: false,\n    description: \"\",\n  });\n\n  const [toDateDisabled, toggleDisabled] = useState(false);\n\n  const { school, degree, fieldofstudy, from, to, current, description } =\n    formData;\n\n  const onChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n  return (\n    <>\n      <Container>\n        <Card className=\"my-5 p-4 d-flex align-items-center\">\n          <PrimaryText size=\"2rem\" weight=\"900\">\n            Add Your Education\n          </PrimaryText>\n          Add any school, course or bootcamp that you have attended / passed\n          <small>* = required field</small>\n          <Form\n            style={{ minWidth: \"80%\" }}\n            onSubmit={(e) => {\n              e.preventDefault();\n              addEducation(formData, history);\n            }}\n          >\n            <Form.Group className=\"mb-3\" controlId=\"school\">\n              <Form.Label>School</Form.Label>\n              <Form.Control\n                value={school}\n                onChange={(e) => onChange(e)}\n                type=\"text\"\n                placeholder=\"* School or bootcamp\"\n                name=\"school\"\n                required\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"degree\">\n              <Form.Label>Degree</Form.Label>\n              <Form.Control\n                value={degree}\n                onChange={(e) => onChange(e)}\n                type=\"text\"\n                placeholder=\"* Degree or Certificate\"\n                name=\"degree\"\n                required\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"fieldofstudy\">\n              <Form.Label>Field of study</Form.Label>\n              <Form.Control\n                value={fieldofstudy}\n                onChange={(e) => onChange(e)}\n                type=\"text\"\n                placeholder=\"Field of study\"\n                name=\"fieldofstudy\"\n              />\n            </Form.Group>\n\n            <Row className=\"mb-3 py-2\">\n              <Form.Group as={Col} controlId=\"from\">\n                <Form.Label>From</Form.Label>\n                <Form.Control\n                  value={from}\n                  onChange={(e) => onChange(e)}\n                  type=\"date\"\n                  name=\"from\"\n                />\n              </Form.Group>\n\n              <Form.Group as={Col} controlId=\"to\">\n                <Form.Label>To</Form.Label>\n                <Form.Control\n                  value={to}\n                  onChange={(e) => onChange(e)}\n                  type=\"date\"\n                  name=\"to\"\n                  disabled={toDateDisabled ? \"disabled\" : \"\"}\n                />\n              </Form.Group>\n            </Row>\n            <Form.Group className=\"mb-3\" id=\"current\">\n              <Form.Check\n                value={current}\n                checked={current}\n                onChange={(e) => {\n                  setFormData({ ...formData, current: !current });\n                  toggleDisabled((toDateDisabled) => !toDateDisabled);\n                }}\n                type=\"checkbox\"\n                name=\"current\"\n                label=\"Current school\"\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"description\">\n              <Form.Label>Program / Course description</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                value={description}\n                onChange={(e) => onChange(e)}\n                name=\"description\"\n                rows={5}\n                placeholder=\"Program / Course description\"\n              />\n            </Form.Group>\n\n            <div className=\"d-grid\">\n              <PrimaryButton type=\"submit\">Submit </PrimaryButton>\n            </div>\n          </Form>\n        </Card>\n\n        <PlainLink to=\"/dashboard\">\n          <div className=\"d-grid py-3\">\n            <SecondaryButton fontSize=\"1.5rem\">Go back</SecondaryButton>\n          </div>\n        </PlainLink>\n      </Container>\n    </>\n  );\n};\n\nAddEducation.propTypes = {\n  addEducation: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addEducation })(withRouter(AddEducation));\n","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/dashboard/Dashboard.js",[],"/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/profile/Profile.js",["288","289","290","291","292","293"],"import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport { getProfileById } from \"../../actions/profile\";\nimport ProfileImage from \"../layout/ProfileImage\";\nimport styled from \"styled-components\";\nimport {\n  Text,\n  PrimaryText,\n  PlainLink,\n  SecondaryButton,\n  EditButton,\n} from \"../../utils/styledComponents\";\n\nimport { Button, Card, Container, Row, Col, Image } from \"react-bootstrap\";\nimport ProfileAccordion from \"./ProfileAccordion\";\n\nconst Profile = ({\n  getProfileById,\n  profile: { profile, loading },\n  auth,\n  match,\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById, match.params.id]);\n\n  return (\n    <>\n      {!profile || loading ? (\n        <Spinner />\n      ) : (\n        <>\n          <PlainLink to=\"/profiles\">\n            <Container className=\"d-grid\">\n              <SecondaryButton fontSize=\"1.5rem\">\n                Back To Profiles\n              </SecondaryButton>\n            </Container>\n          </PlainLink>\n\n          {auth.isAuthenticated &&\n            auth.loading === false &&\n            auth.user._id === profile.user._id && (\n              <PlainLink to=\"/edit-profile\">\n                <Container className=\"my-2 d-grid\">\n                  <EditButton fontSize=\"1.5rem\">Edit profile</EditButton>\n                </Container>\n              </PlainLink>\n            )}\n\n          <Card\n            style={{\n              margin: \"2rem 0rem 2rem 0rem\",\n              border: \"2px #41A0B3 solid\",\n            }}\n          >\n            <Card.Header\n              style={{\n                backgroundColor: \"#D7E8EB\",\n              }}\n            >\n              {\" \"}\n              <div className=\"d-flex flex-column align-items-center\">\n                {profile.avatar ? (\n                  <Image\n                    style={{ border: \"1px solid #41a0b3\" }}\n                    src={profile.avatar}\n                    roundedCircle\n                  />\n                ) : (\n                  <ProfileImage size={120} name={profile.user.name} />\n                )}\n\n                <PrimaryText size=\"3rem\" weight=\"600\">\n                  {profile.user.name}\n                </PrimaryText>\n                <PrimaryText size=\"1.8rem\" weight=\"300\">\n                  {profile.status} at {profile.school}\n                </PrimaryText>\n                <PrimaryText size=\"1.5rem\" weight=\"400\">\n                  {profile.location}\n                </PrimaryText>\n\n                <Container className=\"py-3 d-flex gap-5 justify-content-center\">\n                  {/* Add social links */}\n\n                  <PrimaryText>\n                    <i class=\"fas fa-globe fa-2x\" />\n                  </PrimaryText>\n                  <PrimaryText>\n                    <i class=\"fab fa-twitter fa-2x\" />\n                  </PrimaryText>\n                  <PrimaryText>\n                    <i class=\"fab fa-facebook fa-2x\" />\n                  </PrimaryText>\n                  <PrimaryText>\n                    <i class=\"fab fa-linkedin fa-2x\" />\n                  </PrimaryText>\n                  <PrimaryText>\n                    <i class=\"fab fa-instagram fa-2x\" />\n                  </PrimaryText>\n                </Container>\n              </div>\n            </Card.Header>\n            <Card.Body>\n              {/* <Card.Text className=\"d-flex justify-content-center\"> */}\n              <ProfileAccordion profile={profile} />\n            </Card.Body>\n          </Card>\n        </>\n      )}\n    </>\n  );\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n  auth: state.auth,\n});\n\n// We need auth because we want to see if the user is logged in\n// and if they are, and the profile that they are viewing matches\n// we want them to be able to edit their profile\n\nexport default connect(mapStateToProps, { getProfileById })(Profile);\n","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/profiles/Profiles.js",[],"/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/post/Post.js",["294"],"import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Spinner from \"../layout/Spinner\";\nimport PostItem from \"../posts/PostItem\";\nimport { getPost } from \"../../actions/post\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport CommentForm from \"./CommentForm\";\nimport CommentItem from \"./CommentItem\";\n\nconst Post = ({ getPost, post: { post, loading }, match }) => {\n  useEffect(() => {\n    getPost(match.params.id);\n  }, [getPost]);\n\n  return loading || post === null ? (\n    <Spinner />\n  ) : (\n    <>\n      <Link to=\"/posts\" class=\"btn\">\n        Back to posts\n      </Link>\n      <PostItem post={post} showActions={false} />\n\n      <div className=\"posts comments\">\n        {post.comments.map((comment) => (\n          <CommentItem key={comment._id} comment={comment} postId={post._id} />\n        ))}\n      </div>\n      <CommentForm postId={post._id} />\n    </>\n  );\n};\n\nPost.propTypes = {\n  post: PropTypes.object.isRequired,\n  getPost: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  post: state.post,\n});\n\nexport default connect(mapStateToProps, { getPost })(Post);\n","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/routing/PrivateRoute.js",[],"/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/dashboard/Experience.js",["295"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport formatDate from \"../../utils/formatDate\";\nimport { connect } from \"react-redux\";\nimport { deleteExperience } from \"../../actions/profile\";\nimport { ExperienceItem } from \"./ExperienceItem\";\nimport {\n  Header,\n  Text,\n  PlainLink,\n  PrimaryButton,\n  SecondaryButton,\n} from \"../../utils/styledComponents\";\n\nconst Experience = ({ profile: { profile, loading }, deleteExperience }) => {\n  return (\n    <>\n      <Header>\n        <Text color=\"#41a0b3\" size=\"2rem\">\n          Experience credentials\n        </Text>\n        <Text size=\"1.2rem\">\n          <i class=\"fas fa-tie\" /> Add any teaching experience that you have had\n          in the past\n        </Text>\n      </Header>\n\n      <PlainLink to=\"/add-experience\">\n        <div className=\"d-grid py-3\">\n          <PrimaryButton size=\"lg\" fontSize=\"2rem\">\n            Add experience\n          </PrimaryButton>\n        </div>\n      </PlainLink>\n\n      {profile.experience.map((exp) => (\n        <ExperienceItem\n          key={exp._id}\n          exp={exp}\n          deleteExperience={() => deleteExperience(exp._id)}\n        />\n      ))}\n\n      <PlainLink to=\"/dashboard\">\n        <div className=\"d-grid py-3\">\n          <SecondaryButton fontSize=\"1.5rem\">Go back</SecondaryButton>\n        </div>\n      </PlainLink>\n    </>\n  );\n};\n\nExperience.propTypes = {\n  profile: PropTypes.object.isRequired, // state\n  deleteExperience: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { deleteExperience })(Experience);\n","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/reviews/ReviewForm.js",["296","297","298","299","300","301","302","303","304","305","306","307"],"import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { addReview } from \"../../actions/review\";\nimport emojiList from \"../../utils/emojiList\";\nimport Emoji from \"./Emoji\";\n\nimport {\n  Accordion,\n  Badge,\n  Button,\n  Card,\n  Container,\n  Row,\n  Col,\n  Image,\n  Form,\n} from \"react-bootstrap\";\nimport { Text, PrimaryText, PrimaryButton } from \"../../utils/styledComponents\";\n\nconst initialState = {\n  emoticon: \"\",\n  school: \"\",\n  schooltype: \"\",\n  location: \"\",\n  duration: \"\",\n  employmentstatus: \"\",\n  salary: \"\",\n  perks: [],\n  visahelp: \"\",\n  legalexpenses: \"\",\n  accommodation: \"\",\n  career: \"\",\n  rating: {\n    balance: 0,\n    workplace: 0,\n    management: 0,\n    benefits: 0,\n  },\n  pros: \"\",\n  cons: \"\",\n  comments: \"\",\n  recommend: \"\",\n  advice: \"\",\n};\n\nconst ReviewForm = ({ addReview }) => {\n  // States\n\n  const [formData, setFormData] = useState(initialState);\n\n  // Destructure initial state\n\n  const {\n    emoticon,\n    school,\n    schooltype,\n    location,\n    duration,\n    employmentstatus,\n    salary,\n    perks,\n    visahelp,\n    legalexpenses,\n    accommodation,\n    career,\n    rating,\n    pros,\n    cons,\n    comments,\n    recommend,\n    advice,\n  } = formData;\n\n  /* setFormData({\n      ...formData,\n      rating: {\n        ...rating,\n        overall: parseFloat(\n          (rating.balance +\n            rating.workplace +\n            rating.benefits +\n            rating.management) /\n            4\n          //(parseInt(Object.keys(rating).length) - 1)\n        ),\n      },\n    }); */\n\n  // Event listeners\n\n  // Update the state as form gets filled out\n\n  const onChangeEmoji = (e) => {\n    setFormData({\n      ...formData,\n      emoticon: e,\n    });\n  };\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  // Benefits / Perks array\n  const onToggle = (e) => {\n    e.target.checked\n      ? setFormData({\n          ...formData,\n          perks: [...perks, e.target.name],\n        })\n      : setFormData({\n          ...formData,\n          perks: perks.filter((perk) => perk !== e.target.name),\n        });\n  };\n\n  // Rating the school, everytime this function is called it\n  // updates the relevant property and automatically calculates\n  // the average overall rating score\n\n  const onRate = async (e) => {\n    e.target.checked &&\n      setFormData({\n        ...formData,\n        rating: {\n          ...rating,\n          [e.target.name]: parseInt(e.target.value),\n        },\n      });\n  };\n\n  // Submitting the form data\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    // Post request - Submitting the form\n    addReview({ formData });\n    // Resetting the object and the form to its initial state\n    setFormData(initialState);\n  };\n\n  return (\n    <>\n      <Card\n        style={{\n          margin: \"2rem 0rem 2rem 0rem\",\n          border: \"0.15rem #41A0B3 solid\",\n        }}\n      >\n        <Card.Header\n          style={{\n            backgroundColor: \"#D7E8EB\",\n          }}\n        >\n          {\" \"}\n          <div className=\"d-flex flex-column text-center\">\n            <PrimaryText size=\"2.2rem\" weight=\"600\">\n              Leave A Review\n            </PrimaryText>\n            <Text size=\"1.5rem\" weight=\"400\">\n              Leave a review of a school that you have worked for in the past -\n              or even your current school.\n            </Text>\n\n            <Emoji formData={formData} setFormData={setFormData} />\n          </div>\n        </Card.Header>\n        <Card.Body>\n          <Form\n            onSubmit={(e) => {\n              onSubmit(e);\n            }}\n          >\n            <Accordion flush>\n              <Accordion.Item eventKey=\"0\">\n                <Accordion.Header>\n                  <PrimaryText size=\"1.5rem\" weight=\"400\">\n                    General information\n                  </PrimaryText>\n                </Accordion.Header>\n                <Accordion.Body>\n                  <div className=\"d-flex flex-column\">\n                    <Form.Group className=\"mb-3\">\n                      <Form.Label>\n                        <PrimaryText size=\"1.2rem\" weight=\"400\">\n                          Name of the school{\" \"}\n                        </PrimaryText>\n                      </Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        name=\"school\"\n                        value={school}\n                        onChange={(e) => onChange(e)}\n                        placeholder=\"School name\"\n                      />\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\">\n                      <Form.Label>\n                        <PrimaryText size=\"1.2rem\" weight=\"400\">\n                          {\" \"}\n                          Type of School\n                        </PrimaryText>\n                      </Form.Label>\n                      <Form.Select\n                        required\n                        name=\"schooltype\"\n                        value={schooltype}\n                        onChange={(e) => onChange(e)}\n                      >\n                        <option>Agency</option>\n                        <option>Kindergarten</option>\n                        <option>Public school</option>\n                        <option>Private / Bilingual school</option>\n                        <option>International school</option>\n                        <option>University / College</option>\n                        <option>Language school / Training center</option>\n                        <option>Online school</option>\n                      </Form.Select>\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\">\n                      <Form.Label>\n                        <PrimaryText size=\"1.2rem\" weight=\"400\">\n                          Location\n                        </PrimaryText>\n                      </Form.Label>\n                      <Form.Select\n                        name=\"location\"\n                        value={location}\n                        onChange={(e) => onChange(e)}\n                      >\n                        <option class=\"province\" disabled>\n                          Anhui (Province)\n                        </option>\n                        <option>Anqing</option>\n                        <option>Bengbu</option>\n                        <option>Hefei</option>\n                        <option>Huainan</option>\n                        <option>Huangshan</option>\n                        <option>Ma’anshan</option>\n                        <option>Shexian</option>\n                        <option>Tongcheng</option>\n                        <option>Tongling</option>\n                        <option>Wuhu</option>\n                        <option>Xuancheng</option>\n                        <option class=\"province\" disabled>\n                          Beijing (Provincial-Level Municipality, Capital)\n                        </option>\n                        <option>Beijing</option>\n                        <option class=\"province\" disabled>\n                          Chongqing (Provincial-Level Municipality)\n                        </option>\n                        <option>Chongqing</option>\n                        <option>Hechuan</option>\n                        <option>Wanzhou</option>\n                        <option class=\"province\" disabled>\n                          Fujian (Province)\n                        </option>\n                        <option>Fuzhou</option>\n                        <option>Longyan</option>\n                        <option>Nanping</option>\n                        <option>Quanzhou</option>\n                        <option>Sanming</option>\n                        <option>Shaowu</option>\n                        <option>Xiamen</option>\n                        <option>Yong’an</option>\n                        <option>Zhangzhou</option>\n                        <option class=\"province\" disabled>\n                          Gansu (Province)\n                        </option>\n                        <option>Dunhuang</option>\n                        <option>Jiuquan</option>\n                        <option>Lanzhou</option>\n                        <option>Pingliang</option>\n                        <option>Tianshui</option>\n                        <option>Wuwei</option>\n                        <option>Yumen</option>\n                        <option class=\"province\" disabled>\n                          Guangdong (Province)\n                        </option>\n                        <option>Chaozhou</option>\n                        <option>Foshan</option>\n                        <option>Guangzhou</option>\n                        <option>Jiangmen</option>\n                        <option>Maoming</option>\n                        <option>Meizhou</option>\n                        <option>Shantou</option>\n                        <option>Shaoguan</option>\n                        <option>Shenzhen</option>\n                        <option>Zhanjiang</option>\n                        <option>Zhaoqing</option>\n                        <option>Zhongshan</option>\n                        <option class=\"province\" disabled>\n                          Guangxi (Autonomous Region)\n                        </option>\n                        <option>Baise</option>\n                        <option>Beihai</option>\n                        <option>Guilin</option>\n                        <option>Liuzhou</option>\n                        <option>Nanning</option>\n                        <option>Pingxiang</option>\n                        <option>Wuzhou</option>\n                        <option>Yulin</option>\n                        <option class=\"province\" disabled>\n                          Guizhou (Province)\n                        </option>\n                        <option>Anshun</option>\n                        <option>Duyun</option>\n                        <option>Guiyang</option>\n                        <option>Zunyi</option>\n                        <option class=\"province\" disabled>\n                          Hainan (Province)\n                        </option>\n                        <option>Haikou</option>\n                        <option class=\"province\" disabled>\n                          Hebei (Province)\n                        </option>\n                        <option>Baoding</option>\n                        <option>Cangzhou</option>\n                        <option>Chengde</option>\n                        <option>Handan</option>\n                        <option>Kalgan</option>\n                        <option>Qinhuangdao</option>\n                        <option>Shanhaiguan</option>\n                        <option>Shijiazhuang</option>\n                        <option>Tangshan</option>\n                        <option>Xingtai</option>\n                        <option>Xuanhua</option>\n                        <option>Zhengding</option>\n                        <option class=\"province\" disabled>\n                          Heilongjiang (Province)\n                        </option>\n                        <option>Acheng</option>\n                        <option>Binxian</option>\n                        <option>Harbin</option>\n                        <option>Hegang</option>\n                        <option>Hulan</option>\n                        <option>Jiamusi</option>\n                        <option>Jixi</option>\n                        <option>Mudanjiang</option>\n                        <option>Qiqihar</option>\n                        <option>Shuangyashan</option>\n                        <option>Yichun</option>\n                        <option class=\"province\" disabled>\n                          Henan (Province)\n                        </option>\n                        <option>Anyang</option>\n                        <option>Hebi</option>\n                        <option>Jiaozuo</option>\n                        <option>Kaifeng</option>\n                        <option>Luohe</option>\n                        <option>Luoyang</option>\n                        <option>Nanyang</option>\n                        <option>Shangqiu</option>\n                        <option>Xinxiang</option>\n                        <option>Xinyang</option>\n                        <option>Xuchang</option>\n                        <option>Zhengzhou</option>\n                        <option>Zhoukou</option>\n                        <option class=\"province\" disabled>\n                          Hong Kong (Special Administrative Region)\n                        </option>\n                        <option>Hong Kong</option>\n                        <option>Victoria</option>\n                        <option class=\"province\" disabled>\n                          Hubei (Province)\n                        </option>\n                        <option>Daye</option>\n                        <option>Hankou</option>\n                        <option>Hanyang</option>\n                        <option>Huangshi</option>\n                        <option>Jingzhou</option>\n                        <option>Laohekou</option>\n                        <option>Wuchang</option>\n                        <option>Wuhan</option>\n                        <option>Xiangfan</option>\n                        <option>Yichang</option>\n                        <option class=\"province\" disabled>\n                          Hunan (Province)\n                        </option>\n                        <option>Changde</option>\n                        <option>Changsha</option>\n                        <option>Hengyang</option>\n                        <option>Jinshi</option>\n                        <option>Shaoyang</option>\n                        <option>Xiangtan</option>\n                        <option>Yiyang</option>\n                        <option>Yueyang</option>\n                        <option>Zhuzhou</option>\n                        <option class=\"province\" disabled>\n                          Inner Mongolia (Autonomous Region)\n                        </option>\n                        <option>Baotou</option>\n                        <option>Chifeng</option>\n                        <option>Duolun</option>\n                        <option>Erenhot</option>\n                        <option>Hailar</option>\n                        <option>Hohhot</option>\n                        <option>Jining</option>\n                        <option>Manzhouli</option>\n                        <option>Tongliao</option>\n                        <option class=\"province\" disabled>\n                          Jiangsu (Province)\n                        </option>\n                        <option>Changshu</option>\n                        <option>Changzhou</option>\n                        <option>Huai’an</option>\n                        <option>Huaiyin</option>\n                        <option>Lianyungang</option>\n                        <option>Nanjing</option>\n                        <option>Nantong</option>\n                        <option>Suzhou</option>\n                        <option>Taizhou</option>\n                        <option>Wuxi</option>\n                        <option>Xuzhou</option>\n                        <option>Yancheng</option>\n                        <option>Yangzhou</option>\n                        <option>Zhenjiang</option>\n                        <option class=\"province\" disabled>\n                          Jiangxi (Province)\n                        </option>\n                        <option>Ganzhou</option>\n                        <option>Ji’an</option>\n                        <option>Jingdezhen</option>\n                        <option>Jiujiang</option>\n                        <option>Nanchang</option>\n                        <option>Pingxiang</option>\n                        <option>Shangrao</option>\n                        <option>Zhangshu</option>\n                        <option class=\"province\" disabled>\n                          Jilin (Province)\n                        </option>\n                        <option>Baicheng</option>\n                        <option>Changchun</option>\n                        <option>Jilin</option>\n                        <option>Liaoyuan</option>\n                        <option>Siping</option>\n                        <option>Tonghua</option>\n                        <option>Yanji</option>\n                        <option class=\"province\" disabled>\n                          Liaoning (Province)\n                        </option>\n                        <option>Anshan</option>\n                        <option>Beipiao</option>\n                        <option>Benxi</option>\n                        <option>Dalian</option>\n                        <option>Dandong</option>\n                        <option>Fushun</option>\n                        <option>Fuxin</option>\n                        <option>Jinzhou (southern Liaoning)</option>\n                        <option>Jinzhou (western Liaoning)</option>\n                        <option>Liaoyang</option>\n                        <option>Lüshun</option>\n                        <option>Shenyang</option>\n                        <option>Wafangdian</option>\n                        <option>Yingkou</option>\n                        <option class=\"province\" disabled>\n                          Macau (Special Administrative Region)\n                        </option>\n                        <option>Macau</option>\n                        <option class=\"province\" disabled>\n                          Ningxia (Autonomous Region)\n                        </option>\n                        <option>Yinchuan</option>\n                        <option class=\"province\" disabled>\n                          Qinghai (Province)\n                        </option>\n                        <option>Golmud</option>\n                        <option>Lenghu</option>\n                        <option>Xining</option>\n                        <option class=\"province\" disabled>\n                          Shaanxi (Province)\n                        </option>\n                        <option>Ankang</option>\n                        <option>Baoji</option>\n                        <option>Hanzhong</option>\n                        <option>Shangluo</option>\n                        <option>Tongguan</option>\n                        <option>Xi’an</option>\n                        <option>Xianyang</option>\n                        <option>Yan’an</option>\n                        <option class=\"province\" disabled>\n                          Shandong (Province)\n                        </option>\n                        <option>Dezhou</option>\n                        <option>Jinan</option>\n                        <option>Jining</option>\n                        <option>Linzi</option>\n                        <option>Qingdao</option>\n                        <option>Qufu</option>\n                        <option>Weifang</option>\n                        <option>Weihai</option>\n                        <option>Yantai</option>\n                        <option>Zaozhuang</option>\n                        <option>Zibo</option>\n                        <option class=\"province\" disabled>\n                          Shanghai (Provincial-Level Municipality)\n                        </option>\n                        <option>Shanghai</option>\n                        <option class=\"province\" disabled>\n                          Shanxi (Province)\n                        </option>\n                        <option>Changzhi</option>\n                        <option>Datong</option>\n                        <option>Jinzhong</option>\n                        <option>Linfen</option>\n                        <option>Puzhou</option>\n                        <option>Taiyuan</option>\n                        <option>Yangquan</option>\n                        <option class=\"province\" disabled>\n                          Sichuan (Province)\n                        </option>\n                        <option>Chengdu</option>\n                        <option>Kangding</option>\n                        <option>Luzhou</option>\n                        <option>Mianyang</option>\n                        <option>Nanchong</option>\n                        <option>Neijiang</option>\n                        <option>Wutongqiao</option>\n                        <option>Ya’an</option>\n                        <option>Yibin</option>\n                        <option>Zigong</option>\n                        <option class=\"province\" disabled>\n                          Tianjin (Provincial-Level Municipality)\n                        </option>\n                        <option>Tanggu</option>\n                        <option>Tianjin</option>\n                        <option>Tibet (Autonomous Region)</option>\n                        <option>Gartok</option>\n                        <option>Gyangzê</option>\n                        <option>Lhasa</option>\n                        <option>Xigazê</option>\n                        <option class=\"province\" disabled>\n                          Xinjiang (Autonomous Region)\n                        </option>\n                        <option>Hami</option>\n                        <option>Hotan</option>\n                        <option>Karamay</option>\n                        <option>Kashgar</option>\n                        <option>Kucha</option>\n                        <option>Kuldja</option>\n                        <option>Shihezi</option>\n                        <option>Turfan</option>\n                        <option>Ürümqi</option>\n                        <option>Yarkand</option>\n                        <option class=\"province\" disabled>\n                          Yunnan (Province)\n                        </option>\n                        <option>Dali</option>\n                        <option>Gejiu</option>\n                        <option>Jinghong</option>\n                        <option>Kaiyuan</option>\n                        <option>Kunming</option>\n                        <option>Pu’er</option>\n                        <option class=\"province\" disabled>\n                          Zhejiang (Province)\n                        </option>\n                        <option>Fenghua</option>\n                        <option>Hangzhou</option>\n                        <option>Huzhou</option>\n                        <option>Jiaxing</option>\n                        <option>Jinhua</option>\n                        <option>Ningbo</option>\n                        <option>Quzhou</option>\n                        <option>Shaoxing</option>\n                        <option>Wenzhou</option>\n                      </Form.Select>\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\">\n                      <Form.Label>\n                        <PrimaryText size=\"1.2rem\" weight=\"400\">\n                          I worked / I have been working at this school for ...\n                        </PrimaryText>\n                      </Form.Label>\n                      <Form.Select\n                        name=\"duration\"\n                        value={duration}\n                        onChange={(e) => onChange(e)}\n                        required\n                      >\n                        <option>Less than a year</option>\n                        <option>1 year</option>\n                        <option>2 years</option>\n                        <option>3 years</option>\n                        <option>More than 3 years</option>\n                      </Form.Select>\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\">\n                      <Form.Label>\n                        <PrimaryText size=\"1.2rem\" weight=\"400\">\n                          Employment status\n                        </PrimaryText>\n                      </Form.Label>\n                      <Form.Select\n                        name=\"employmentstatus\"\n                        value={employmentstatus}\n                        onChange={(e) => onChange(e)}\n                        required\n                      >\n                        <option>Full-time</option>\n                        <option>Part-time</option>\n                      </Form.Select>\n                    </Form.Group>\n                  </div>\n                </Accordion.Body>\n              </Accordion.Item>\n              <Accordion.Item eventKey=\"1\">\n                <Accordion.Header>\n                  <PrimaryText size=\"1.5rem\" weight=\"400\">\n                    Salary and Benefits\n                  </PrimaryText>\n                </Accordion.Header>\n                <Accordion.Body>\n                  <div className=\"d-flex flex-column\">\n                    <Form.Group className=\"mb-3\">\n                      <Form.Label>\n                        <PrimaryText size=\"1.2rem\" weight=\"400\">\n                          What is the average monthly salary for teachers?{\" \"}\n                        </PrimaryText>\n                      </Form.Label>\n                      <Form.Select\n                        name=\"salary\"\n                        value={salary}\n                        onChange={(e) => onChange(e)}\n                        required\n                      >\n                        <option>Less than 8000 rmb</option>\n                        <option>8000 - 15000 rmb</option>\n                        <option>15000 - 20000 rmb</option>\n                        <option>20000 - 30000 rmb</option>\n                        <option>More than 30000 rmb</option>\n                        <option>I am not sure</option>\n                      </Form.Select>\n                    </Form.Group>\n                    <Form.Group\n                      value={perks}\n                      onChange={(e) => onToggle(e)}\n                      className=\"mb-3\"\n                    >\n                      <Form.Label>\n                        <PrimaryText size=\"1.2rem\" weight=\"400\">\n                          Which of the following perks and benefits does the\n                          school offer?\n                        </PrimaryText>\n                      </Form.Label>\n                      <div>\n                        <Form.Check\n                          inline\n                          name=\"Free housing\"\n                          label=\"Free housing\"\n                          type=\"checkbox\"\n                        />\n\n                        <Form.Check\n                          inline\n                          name=\"Housing allowance\"\n                          label=\"Housing allowance\"\n                          type=\"checkbox\"\n                        />\n\n                        <Form.Check\n                          inline\n                          name=\"Visa costs reimbursement\"\n                          label=\"Visa costs reimbursement\"\n                          type=\"checkbox\"\n                        />\n\n                        <Form.Check\n                          inline\n                          name=\"Flight reimbursement\"\n                          label=\"Flight reimbursement\"\n                          type=\"checkbox\"\n                        />\n\n                        <Form.Check\n                          inline\n                          name=\"Paid winter or summer\"\n                          label=\"Paid winter or summer\"\n                          type=\"checkbox\"\n                        />\n\n                        <Form.Check\n                          inline\n                          name=\"Annual salary increase\"\n                          label=\"Annual salary increase\"\n                          type=\"checkbox\"\n                        />\n\n                        <Form.Check\n                          inline\n                          name=\"Bonus (any kind)\"\n                          label=\"Bonus (any kind)\"\n                          type=\"checkbox\"\n                        />\n                      </div>\n                    </Form.Group>\n                  </div>\n                </Accordion.Body>\n              </Accordion.Item>\n\n              <Accordion.Item eventKey=\"2\">\n                <Accordion.Header>\n                  <PrimaryText size=\"1.5rem\" weight=\"400\">\n                    School support\n                  </PrimaryText>\n                </Accordion.Header>\n                <Accordion.Body>\n                  <div className=\"d-flex flex-column\">\n                    <Form.Group className=\"mb-3\">\n                      <Form.Label>\n                        <PrimaryText size=\"1.2rem\" weight=\"400\">\n                          Did the school offer assistance with getting a Z visa\n                          and a work permit?\n                        </PrimaryText>\n                      </Form.Label>\n                      <Form.Select\n                        name=\"visahelp\"\n                        value={visahelp}\n                        onChange={(e) => onChange(e)}\n                        required\n                      >\n                        <option>Yes</option>\n                        <option>No</option>\n                        <option>N.A.</option>\n                      </Form.Select>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\">\n                      <Form.Label>\n                        <PrimaryText size=\"1.2rem\" weight=\"400\">\n                          Did the school bear the cost of legal expenses?\n                        </PrimaryText>\n                      </Form.Label>\n                      <Form.Select\n                        name=\"legalexpenses\"\n                        value={legalexpenses}\n                        onChange={(e) => onChange(e)}\n                        required\n                      >\n                        <option>\n                          The school covered all expenses incurred in the\n                          process of hiring me\n                        </option>\n                        <option>\n                          The school covered some of the expenses incurred in\n                          the process of hiring me\n                        </option>\n                        <option>\n                          The school didn't cover any of the expenses\n                        </option>\n                        <option>N.A.</option>\n                      </Form.Select>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\">\n                      <Form.Label>\n                        <PrimaryText size=\"1.2rem\" weight=\"400\">\n                          Did the school offer assistance finding suitable\n                          accommodation?\n                        </PrimaryText>\n                      </Form.Label>\n                      <Form.Select\n                        name=\"accommodation\"\n                        value={accommodation}\n                        onChange={(e) => onChange(e)}\n                        required\n                      >\n                        <option>Yes</option>\n                        <option>No</option>\n                        <option>N.A.</option>\n                      </Form.Select>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\">\n                      <Form.Label>\n                        <PrimaryText size=\"1.2rem\" weight=\"400\">\n                          Did the school offer opportunities for advancement and\n                          promotion?\n                        </PrimaryText>\n                      </Form.Label>\n                      <Form.Select\n                        name=\"career\"\n                        value={career}\n                        onChange={(e) => onChange(e)}\n                        required\n                      >\n                        <option>Yes</option>\n                        <option>No</option>\n                        <option>N.A.</option>\n                      </Form.Select>\n                    </Form.Group>\n                  </div>\n                </Accordion.Body>\n              </Accordion.Item>\n\n              <Accordion.Item eventKey=\"3\">\n                <Accordion.Header>\n                  <PrimaryText size=\"1.5rem\" weight=\"400\">\n                    Rate the school\n                  </PrimaryText>\n                </Accordion.Header>\n                <Accordion.Body>\n                  <div className=\"d-flex flex-column\">\n                    <Form.Group className=\"mb-3\">\n                      <Form.Label>\n                        <PrimaryText size=\"1.2rem\" weight=\"400\">\n                          Work/Life balance\n                        </PrimaryText>\n                      </Form.Label>\n\n                      <div class=\"radio-buttons\" onChange={(e) => onRate(e)}>\n                        <Form.Check\n                          inline\n                          type=\"radio\"\n                          name=\"balance\"\n                          id=\"balance-1\"\n                          value=\"1\"\n                          label=\"1\"\n                        />\n\n                        <Form.Check\n                          inline\n                          type=\"radio\"\n                          name=\"balance\"\n                          id=\"balance-2\"\n                          value=\"2\"\n                          label=\"2\"\n                        />\n\n                        <Form.Check\n                          inline\n                          type=\"radio\"\n                          name=\"balance\"\n                          id=\"balance-3\"\n                          value=\"3\"\n                          label=\"3\"\n                        />\n\n                        <Form.Check\n                          inline\n                          type=\"radio\"\n                          name=\"balance\"\n                          id=\"balance-4\"\n                          value=\"4\"\n                          label=\"4\"\n                        />\n\n                        <Form.Check\n                          inline\n                          type=\"radio\"\n                          name=\"balance\"\n                          id=\"balance-5\"\n                          value=\"5\"\n                          label=\"5\"\n                        />\n                      </div>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\">\n                      <Form.Label>\n                        <PrimaryText size=\"1.2rem\" weight=\"400\">\n                          Work Environment\n                        </PrimaryText>\n                      </Form.Label>\n\n                      <div class=\"radio-buttons\" onChange={(e) => onRate(e)}>\n                        <Form.Check\n                          inline\n                          type=\"radio\"\n                          name=\"workplace\"\n                          id=\"workplace-1\"\n                          value=\"1\"\n                          label=\"1\"\n                        />\n\n                        <Form.Check\n                          inline\n                          type=\"radio\"\n                          name=\"workplace\"\n                          id=\"workplace-2\"\n                          value=\"2\"\n                          label=\"2\"\n                        />\n\n                        <Form.Check\n                          inline\n                          type=\"radio\"\n                          name=\"workplace\"\n                          id=\"workplace-3\"\n                          value=\"3\"\n                          label=\"3\"\n                        />\n\n                        <Form.Check\n                          inline\n                          type=\"radio\"\n                          name=\"workplace\"\n                          id=\"workplace-4\"\n                          value=\"4\"\n                          label=\"4\"\n                        />\n\n                        <Form.Check\n                          inline\n                          type=\"radio\"\n                          name=\"workplace\"\n                          id=\"workplace-5\"\n                          value=\"5\"\n                          label=\"5\"\n                        />\n                      </div>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\">\n                      <Form.Label>\n                        <PrimaryText size=\"1.2rem\" weight=\"400\">\n                          Management\n                        </PrimaryText>\n                      </Form.Label>\n\n                      <div class=\"radio-buttons\" onChange={(e) => onRate(e)}>\n                        <Form.Check\n                          inline\n                          type=\"radio\"\n                          name=\"management\"\n                          id=\"management-1\"\n                          value=\"1\"\n                          label=\"1\"\n                        />\n\n                        <Form.Check\n                          inline\n                          type=\"radio\"\n                          name=\"management\"\n                          id=\"management-2\"\n                          value=\"2\"\n                          label=\"2\"\n                        />\n\n                        <Form.Check\n                          inline\n                          type=\"radio\"\n                          name=\"management\"\n                          id=\"management-3\"\n                          value=\"3\"\n                          label=\"3\"\n                        />\n\n                        <Form.Check\n                          inline\n                          type=\"radio\"\n                          name=\"management\"\n                          id=\"management-4\"\n                          value=\"4\"\n                          label=\"4\"\n                        />\n\n                        <Form.Check\n                          inline\n                          type=\"radio\"\n                          name=\"management\"\n                          id=\"management-5\"\n                          value=\"5\"\n                          label=\"5\"\n                        />\n                      </div>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\">\n                      <Form.Label>\n                        <PrimaryText size=\"1.2rem\" weight=\"400\">\n                          Benefits and perks\n                        </PrimaryText>\n                      </Form.Label>\n\n                      <div class=\"radio-buttons\" onChange={(e) => onRate(e)}>\n                        <Form.Check\n                          inline\n                          type=\"radio\"\n                          name=\"benefits\"\n                          id=\"benefits-1\"\n                          value=\"1\"\n                          label=\"1\"\n                        />\n\n                        <Form.Check\n                          inline\n                          type=\"radio\"\n                          name=\"benefits\"\n                          id=\"benefits-2\"\n                          value=\"2\"\n                          label=\"2\"\n                        />\n\n                        <Form.Check\n                          inline\n                          type=\"radio\"\n                          name=\"benefits\"\n                          id=\"benefits-3\"\n                          value=\"3\"\n                          label=\"3\"\n                        />\n\n                        <Form.Check\n                          inline\n                          type=\"radio\"\n                          name=\"benefits\"\n                          id=\"benefits-4\"\n                          value=\"4\"\n                          label=\"4\"\n                        />\n\n                        <Form.Check\n                          inline\n                          type=\"radio\"\n                          name=\"benefits\"\n                          id=\"benefits-5\"\n                          value=\"5\"\n                          label=\"5\"\n                        />\n                      </div>\n                    </Form.Group>\n                  </div>\n                </Accordion.Body>\n              </Accordion.Item>\n              <Accordion.Item eventKey=\"4\">\n                <Accordion.Header>\n                  <PrimaryText size=\"1.5rem\" weight=\"400\">\n                    Leave your comments\n                  </PrimaryText>\n                </Accordion.Header>\n                <Accordion.Body>\n                  <div className=\"d-flex flex-column\">\n                    <Form.Group className=\"mb-3\">\n                      <Form.Label>\n                        <PrimaryText size=\"1.2rem\" weight=\"400\">\n                          What are the pros of working for this school?\n                        </PrimaryText>\n                      </Form.Label>\n                      <Form.Control\n                        as=\"textarea\"\n                        rows={3}\n                        name=\"pros\"\n                        value={pros}\n                        onChange={(e) => onChange(e)}\n                        placeholder=\"\"\n                        required\n                      />\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\">\n                      <Form.Label>\n                        <PrimaryText size=\"1.2rem\" weight=\"400\">\n                          What are the cons of working for this school?\n                        </PrimaryText>\n                      </Form.Label>\n                      <Form.Control\n                        name=\"cons\"\n                        value={cons}\n                        onChange={(e) => onChange(e)}\n                        placeholder=\"\"\n                        required\n                        as=\"textarea\"\n                        rows={3}\n                      />\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\">\n                      <Form.Label>\n                        <PrimaryText size=\"1.2rem\" weight=\"400\">\n                          Leave your comments on the school below - feel free to\n                          write at length\n                        </PrimaryText>\n                      </Form.Label>\n                      <Form.Control\n                        as=\"textarea\"\n                        rows={3}\n                        name=\"comments\"\n                        value={comments}\n                        onChange={(e) => onChange(e)}\n                        placeholder=\"\"\n                        required\n                      />\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\">\n                      <Form.Label>\n                        <PrimaryText size=\"1.2rem\" weight=\"400\">\n                          Would you recommend working here to a friend?\n                        </PrimaryText>\n                      </Form.Label>\n                      <Form.Control\n                        as=\"textarea\"\n                        rows={3}\n                        name=\"recommend\"\n                        value={recommend}\n                        onChange={(e) => onChange(e)}\n                        placeholder=\"\"\n                        required\n                      />\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\">\n                      <Form.Label>\n                        <PrimaryText size=\"1.2rem\" weight=\"400\">\n                          Do you have any advice for the management?\n                        </PrimaryText>\n                      </Form.Label>\n                      <Form.Control\n                        as=\"textarea\"\n                        rows={3}\n                        name=\"advice\"\n                        value={advice}\n                        onChange={(e) => onChange(e)}\n                        placeholder=\"\"\n                        required\n                      />\n                    </Form.Group>\n                  </div>\n                </Accordion.Body>\n              </Accordion.Item>\n            </Accordion>\n\n            <div className=\"d-grid p-5\">\n              <PrimaryButton type=\"submit\" fontSize=\"1.5rem\">\n                Leave your comments\n              </PrimaryButton>\n            </div>\n          </Form>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nReviewForm.propTypes = {\n  addReview: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addReview })(ReviewForm);\n","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/dashboard/Education.js",["308","309","310","311","312","313","314","315","316","317","318"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport formatDate from \"../../utils/formatDate\";\nimport { connect } from \"react-redux\";\nimport { deleteEducation } from \"../../actions/profile\";\n\nimport {\n  DangerButton,\n  Header,\n  PlainLink,\n  PrimaryButton,\n  SecondaryButton,\n  StyledLink,\n} from \"../../utils/styledComponents\";\n\nimport { Text, PrimaryText } from \"../../utils/styledComponents\";\n\nimport {\n  Badge,\n  Button,\n  Card,\n  Container,\n  Row,\n  Col,\n  Image,\n} from \"react-bootstrap\";\nimport { EducationItem } from \"./EducationItem\";\n\nconst Education = ({ deleteEducation, profile: { profile, loading } }) => {\n  return (\n    <>\n      <Header>\n        <Text color=\"#41a0b3\" size=\"2rem\">\n          Education credentials\n        </Text>\n        <Text size=\"1.2rem\">\n          <i class=\"fas fa-graduation-cap\"></i> Add any school, bootcamp, etc\n          that you have attended\n        </Text>\n      </Header>\n\n      <PlainLink to=\"/add-education\">\n        <div className=\"d-grid py-3\">\n          <PrimaryButton size=\"lg\" fontSize=\"2rem\">\n            Add education\n          </PrimaryButton>\n        </div>\n      </PlainLink>\n\n      {profile.education.map((edu) => (\n        <EducationItem\n          key={edu._id}\n          edu={edu}\n          deleteEducation={() => deleteEducation(edu._id)}\n        />\n      ))}\n\n      <PlainLink to=\"/dashboard\">\n        <div className=\"d-grid py-3\">\n          <SecondaryButton fontSize=\"1.5rem\">Go back</SecondaryButton>\n        </div>\n      </PlainLink>\n    </>\n  );\n};\n\nEducation.propTypes = {\n  profile: PropTypes.object.isRequired, // state\n  deleteEducation: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { deleteEducation })(Education);\n","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/posts/Posts.js",[],"/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/reviews/Review.js",["319"],"import React, { useEffect } from \"react\";\nimport { getReviewById } from \"../../actions/review\";\nimport { ReviewAccordion } from \"./ReviewAccordion\";\nimport { ReviewCard } from \"../layout/Card\";\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Spinner } from \"react-bootstrap\";\nimport { PlainLink, SecondaryButton } from \"../../utils/styledComponents\";\n\nconst Review = ({\n  getReviewById,\n  review: { loading, review },\n  auth,\n  match,\n}) => {\n  useEffect(() => {\n    getReviewById(match.params.id);\n  }, [getReviewById, match.params.id]);\n\n  return (\n    <>\n      {!review || loading ? (\n        <Spinner />\n      ) : (\n        <>\n          <ReviewCard review={review} />\n          <PlainLink to=\"/reviews\" className=\"d-grid py-3\">\n            <SecondaryButton fontSize=\"1.5rem\">Back to reviews</SecondaryButton>\n          </PlainLink>\n        </>\n      )}\n    </>\n  );\n};\n\nReview.propTypes = {\n  getReviewById: PropTypes.func.isRequired,\n  review: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  review: state.review,\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { getReviewById })(Review);\n","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/reviews/Reviews.js",["320","321","322","323","324","325","326"],"import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport ReviewItem from \"./ReviewItem\";\n\nimport { getReviews } from \"../../actions/review\";\nimport styled from \"styled-components\";\n\nimport {\n  Badge,\n  Button,\n  Card,\n  Container,\n  Row,\n  Col,\n  Image,\n} from \"react-bootstrap\";\nimport {\n  Header,\n  PlainLink,\n  SecondaryButton,\n  Text,\n} from \"../../utils/styledComponents\";\n\nconst Reviews = ({ getReviews, review: { reviews, loading } }) => {\n  useEffect(() => {\n    getReviews();\n  }, [getReviews]);\n\n  return loading ? (\n    <Spinner />\n  ) : (\n    <>\n      <Header>\n        <Text color=\"#41a0b3\" size=\"2rem\">\n          School Reviews\n        </Text>\n        <p class=\"lead\">Genuine reviews left by fellow teachers</p>\n      </Header>\n\n      <Container fluid>\n        <Row>\n          {reviews.map((review) => (\n            <Col xs={12} sm={12} md={6} lg={4} xl={4}>\n              <ReviewItem key={review._id} review={review} />\n            </Col>\n          ))}\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nReviews.propTypes = {\n  getReviews: PropTypes.func.isRequired,\n  review: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  review: state.review,\n});\n\nexport default connect(mapStateToProps, { getReviews })(Reviews);\n","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/actions/types.js",[],"/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/actions/alert.js",[],"/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/utils/styledComponents.js",["327","328"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport { Button, Card, Container, Row, Col } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nexport const Text = (props) => {\n  const StyledText = styled.span`\n    color: ${(props) => props.color};\n    line-height: ${(props) => props.line};\n    font-size: ${(props) => props.size};\n    font-weight: ${(props) => props.weight};\n    font-family: \"Raleway\";\n  `;\n  return <StyledText {...props}>{props.children}</StyledText>;\n};\n\nexport const PrimaryText = (props) => {\n  const StyledText = styled.span`\n    color: #41a0b3;\n    line-height: ${(props) => props.line};\n    font-size: ${(props) => props.size};\n    font-weight: ${(props) => props.weight};\n    font-family: \"Raleway\";\n  `;\n  return <StyledText {...props}>{props.children}</StyledText>;\n};\n\nexport const PrimaryOutlineButton = (props) => {\n  const StyledButton = styled(Button)`\n    background-color: white;\n    border: 0.15rem solid #41a0b3;\n    text-decoration: none;\n    font-weight: 300;\n    font-size: ${(props) => props.fontSize};\n    color: #41a0b3;\n    &:hover {\n      border: 0.1rem solid #41a0b3;\n      background-color: #41a0b3;\n      color: white;\n    }\n  `;\n  return <StyledButton {...props}>{props.children}</StyledButton>;\n};\n\nexport const PrimaryButton = (props) => {\n  const StyledButton = styled(Button)`\n    background-color: #d7e8eb;\n    border: 0.15rem solid #41a0b3;\n    text-decoration: none;\n    font-weight: 300;\n    font-size: ${(props) => props.fontSize};\n    color: #41a0b3;\n    &:hover {\n      border: 0.15rem solid #41a0b3;\n      background-color: white;\n      color: #41a0b3;\n    }\n  `;\n  return <StyledButton {...props}>{props.children}</StyledButton>;\n};\n\nexport const EditButton = (props) => {\n  const StyledButton = styled(Button)`\n    background-color: #ffc666;\n    border: 0.15rem solid #f29704;\n    text-decoration: none;\n    font-weight: 300;\n    font-size: ${(props) => props.fontSize};\n    color: #f29704;\n    &:hover {\n      border: 0.15rem solid #f29704;\n      background-color: #f29704;\n      color: white;\n    }\n  `;\n  return <StyledButton {...props}>{props.children}</StyledButton>;\n};\n\nexport const SecondaryButton = (props) => {\n  const StyledButton = styled(Button)`\n    background-color: lightgrey;\n    border: 0.15rem solid #3f4c4f;\n    text-decoration: none;\n    font-weight: 300;\n    font-size: ${(props) => props.fontSize};\n    color: #3f4c4f;\n    &:hover {\n      border: 0.15rem solid #3f4c4f;\n      background-color: #3f4c4f;\n      color: lightgrey;\n    }\n  `;\n\n  return <StyledButton {...props}>{props.children}</StyledButton>;\n};\n\nexport const SuccessButton = (props) => {\n  const StyledButton = styled(Button)`\n    background-color: green;\n    border: 0.15rem solid darkgreen;\n    text-decoration: none;\n    font-weight: 300;\n    font-size: ${(props) => props.fontSize};\n    color: white;\n    &:hover {\n      border: 0.15rem solid darkgreen;\n      background-color: darkgreen;\n      color: white;\n    }\n  `;\n  return <StyledButton {...props}>{props.children}</StyledButton>;\n};\nexport const DangerButton = (props) => {\n  const StyledButton = styled(Button)`\n    background-color: white;\n    border: 0.15rem solid red;\n    text-decoration: none;\n    font-weight: 300;\n    font-size: ${(props) => props.fontSize};\n    color: red;\n    &:hover {\n      border: 0.1rem solid red;\n      background-color: red;\n      color: white;\n    }\n  `;\n  return <StyledButton {...props}>{props.children}</StyledButton>;\n};\n\nexport const StyledLink = (props) => {\n  const MyLink = styled(Link)`\n    text-decoration: none;\n    color: ${(props) => props.color};\n    font-size: ${(props) => props.size};\n    font-family: \"Raleway\";\n  `;\n\n  return <MyLink {...props}>{props.children}</MyLink>;\n};\n\nexport const PlainLink = (props) => {\n  const MyLink = styled(Link)`\n    text-decoration: none;\n  `;\n\n  return <MyLink {...props}>{props.children}</MyLink>;\n};\n\nexport const Header = (props) => {\n  return (\n    <Container className=\"my-3\">\n      <Card\n        className=\"text-center\"\n        style={{\n          border: \"0.15rem solid #41a0b3\",\n          backgroundColor: \"#D7E8EB\",\n          minWidth: \"60%\",\n          padding: \"1rem\",\n        }}\n      >\n        {props.children}\n      </Card>\n    </Container>\n  );\n};\n\n// #41a0b3\n","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/actions/profile.js",[],"/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/profile-forms/ChooseAvatar.js",["329","330","331","332","333","334"],"import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { addEducation } from \"../../actions/profile\";\nimport avatarList from \"../../utils/avatarList\";\nimport { Container, Row, Col, Button, Modal } from \"react-bootstrap\";\n\nconst ChooseAvatar = ({ changeAvatar, setToggleModal, toggleModal }) => {\n  const onClick = (e) => {\n    changeAvatar(e);\n    setToggleModal();\n  };\n  const avatars = avatarList.map((avatar) => (\n    <div class=\"\" onClick={() => onClick(avatar)}>\n      <img src={avatar} alt=\"\" />\n    </div>\n  ));\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <>\n      <Modal size=\"xl\" show={toggleModal} onHide={setToggleModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>Choose avatar</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Container>\n            <Row>\n              {avatarList.map((avatar) => (\n                <Col sm={12} md={6} lg={4} onClick={() => onClick(avatar)}>\n                  <img src={avatar} alt=\"\" />\n                </Col>\n              ))}\n            </Row>\n          </Container>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={setToggleModal}></Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n\n  // return (\n  //   <>\n  //     <div class=\"avatar-section\">\n  //       <div class=\"arrow-left\">\n  //         <h1>\n  //           <i class=\"fas fa-chevron-left\"></i>\n  //         </h1>\n  //       </div>\n\n  //       <div class=\"avatar-grid\">{avatars}</div>\n\n  //       <div class=\"arrow-right\">\n  //         <h1>\n  //           <i class=\"fas fa-chevron-right\"></i>\n  //         </h1>\n  //       </div>\n  //     </div>\n  //   </>\n  // );\n};\n\nChooseAvatar.propTypes = {\n  addEducation: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addEducation })(ChooseAvatar);\n","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/layout/ProfileImage.js",["335","336","337"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport { Image } from \"react-bootstrap\";\nconst { davatar } = require(\"davatar\");\n\nconst ProfileImage = ({ image, size, imageSize, name, margin }) => {\n  const imageData = davatar.generate({\n    size: size,\n    text: name,\n    fontFamily: \"Verdana\",\n    textColor: \"#41a0b3\",\n    backgroundColor: \"#D7E8EB\",\n  });\n  return (\n    <>\n      <img\n        style={{\n          maxWidth: \"80%\",\n          maxHeight: \"80%\",\n          height: imageSize,\n          width: imageSize,\n          border: \"0.2rem solid #41a0b3\",\n          borderRadius: \"50%\",\n          //margin: \"0.4rem 0rem 0.4rem 0rem\",\n          margin: margin,\n        }}\n        src={image ? image : imageData}\n        alt=\"image\"\n      ></img>\n    </>\n  );\n};\n\nexport default ProfileImage;\n","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/actions/review.js",["338"],"import {\n  GET_REVIEWS,\n  GET_REVIEW,\n  REVIEW_ERROR,\n  ADD_REVIEW,\n  DELETE_REVIEW,\n} from \"./types\";\nimport axios from \"axios\";\nimport { setAlert } from \"./alert\";\n\n// Get reviews\n\nexport const getReviews = () => async (dispatch) => {\n  try {\n    const res = await axios.get(\"/api/reviews/\");\n\n    dispatch({\n      type: GET_REVIEWS,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: REVIEW_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Get review by id\n\nexport const getReviewById = (reviewId) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/reviews/${reviewId}`);\n\n    dispatch({\n      type: GET_REVIEW,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: REVIEW_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Add review\n\nexport const addReview = (formData) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  try {\n    const res = await axios.post(`/api/reviews/`, formData, config);\n\n    dispatch({\n      type: ADD_REVIEW,\n      payload: res.data,\n    });\n\n    dispatch(setAlert(\"Your review has been posted\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: REVIEW_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/reviews/ReviewItem.js",["339","340"],"import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport formatDate from \"../../utils/formatDate\";\nimport { ReviewItemCard } from \"../layout/Card\";\n\nconst ReviewItem = ({\n  auth,\n  review: {\n    _id,\n    formData: { emoticon, school, location, rating, comments },\n    date,\n    name,\n  },\n}) => {\n  const averageRating =\n    (rating.balance + rating.workplace + rating.management + rating.benefits) /\n    4;\n\n  return (\n    <>\n      <ReviewItemCard\n        name={name}\n        comments={comments}\n        emoticon={emoticon}\n        school={school}\n        location={location}\n        rating={averageRating.toFixed(1)}\n        date={formatDate(date)}\n        link={`/reviews/${_id}`}\n      />\n    </>\n  );\n};\n\nReviewItem.propTypes = {\n  review: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, {})(ReviewItem);\n","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/layout/Spinner.js",[],"/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/actions/post.js",["341"],"import {\n  GET_POSTS,\n  GET_POST,\n  POST_ERROR,\n  UPDATE_LIKES,\n  ADD_POST,\n  DELETE_POST,\n  ADD_COMMENT,\n  REMOVE_COMMENT,\n} from \"./types\";\nimport axios from \"axios\";\nimport { setAlert } from \"./alert\";\n\n// Get posts\n\nexport const getPosts = () => async (dispatch) => {\n  try {\n    const res = await axios.get(\"/api/posts\");\n\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Get post\n\nexport const getPost = (id) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/posts/${id}`);\n\n    dispatch({\n      type: GET_POST,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Add post\n\nexport const addPost = (formData) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  try {\n    const res = await axios.post(`/api/posts/`, formData, config);\n\n    dispatch({\n      type: ADD_POST,\n      payload: res.data,\n    });\n\n    dispatch(setAlert(\"Your post has been created\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Delete post\n\nexport const deletePost = (id) => async (dispatch) => {\n  try {\n    await axios.delete(`/api/posts/${id}`);\n\n    dispatch({\n      type: DELETE_POST,\n      payload: id,\n    });\n\n    dispatch(setAlert(\"Your post has been removed\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Add comment\n\nexport const addComment = (postId, formData) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  try {\n    const res = await axios.post(\n      `/api/posts/comment/${postId}`,\n      formData,\n      config\n    );\n\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data,\n      // Remember, res.data returns an array of comments. We are returning\n      // the whole array, not just one comment\n    });\n\n    dispatch(setAlert(\"Comment added\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Remove comment\n\nexport const removeComment = (postId, commentId) => async (dispatch) => {\n  try {\n    const res = await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\n\n    dispatch({\n      type: REMOVE_COMMENT,\n      payload: commentId,\n      // Remember, res.data returns an array of comments. We are returning\n      // the whole array, not just one comment\n    });\n\n    dispatch(setAlert(\"Comment removed\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Add like\n\nexport const addLike = (id) => async (dispatch) => {\n  try {\n    const res = await axios.put(`/api/posts/like/${id}`);\n\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: { id, likes: res.data },\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Remove like\n\nexport const removeLike = (id) => async (dispatch) => {\n  try {\n    const res = await axios.put(`/api/posts/unlike/${id}`);\n\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: { id, likes: res.data },\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/posts/PostForm.js",[],"/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/reviews/ReviewAccordion.js",["342","343","344"],"import React from \"react\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport formatDate from \"../../utils/formatDate\";\nimport styled from \"styled-components\";\nimport { PrimaryText, Text } from \"../../utils/styledComponents\";\nimport { Spinner } from \"react-bootstrap\";\n\nexport const ReviewAccordion = ({\n  formData: {\n    salary,\n    perks,\n    visahelp,\n    career,\n    accommodation,\n    advice,\n    comments,\n    cons,\n\n    legalexpenses,\n\n    pros,\n    rating,\n    recommend,\n  },\n}) => {\n  const ratingStars = (score) => {\n    let stars = [];\n    for (let step = 0; step < score; step++) {\n      stars.push(\n        <>\n          <Text size=\"2rem\">\n            <i class=\"far fa-star\" />\n          </Text>\n          &nbsp;\n        </>\n      );\n    }\n\n    return stars;\n  };\n\n  return (\n    <>\n      <Accordion flush>\n        <Accordion.Item eventKey=\"0\">\n          <Accordion.Header>\n            <PrimaryText size=\"1.5rem\" weight=\"400\">\n              Salary and Benefits{\" \"}\n            </PrimaryText>\n          </Accordion.Header>\n          <Accordion.Body>\n            <div className=\"d-flex flex-column\">\n              <PrimaryText size=\"1.2rem\" weight=\"400\">\n                What is the average monthly salary for teachers?\n              </PrimaryText>\n              <Text size=\"1.2rem\" weight=\"400\">\n                {salary && salary}\n              </Text>\n              <PrimaryText size=\"1.2rem\" weight=\"400\">\n                Which of the following perks and benefits does the school offer?\n              </PrimaryText>\n              <Text size=\"1.2rem\" weight=\"400\">\n                {perks && perks.map((perk) => <li>{perk}</li>)}\n              </Text>\n            </div>\n          </Accordion.Body>\n        </Accordion.Item>\n        <Accordion.Item eventKey=\"1\">\n          <Accordion.Header>\n            <PrimaryText size=\"1.5rem\" weight=\"400\">\n              School Support\n            </PrimaryText>\n          </Accordion.Header>\n          <Accordion.Body>\n            <div className=\"d-flex flex-column\">\n              <PrimaryText size=\"1.2rem\" weight=\"400\">\n                Did the school offer assistance with getting a Z visa and a work\n                permit?{\" \"}\n              </PrimaryText>\n              <Text size=\"1.2rem\" weight=\"400\">\n                {visahelp && visahelp}\n              </Text>\n              <PrimaryText size=\"1.2rem\" weight=\"400\">\n                Did the school bear the cost of legal expenses?\n              </PrimaryText>\n              <Text size=\"1.2rem\" weight=\"400\">\n                {legalexpenses && legalexpenses}\n              </Text>\n              <PrimaryText size=\"1.2rem\" weight=\"400\">\n                Did the school offer assistance finding suitable accommodation?\n              </PrimaryText>\n              <Text size=\"1.2rem\" weight=\"400\">\n                {accommodation && accommodation}\n              </Text>\n              <PrimaryText size=\"1.2rem\" weight=\"400\">\n                Did the school offer opportunities for advancement and\n                promotion?\n              </PrimaryText>\n              <Text size=\"1.2rem\" weight=\"400\">\n                {career && career}\n              </Text>\n            </div>\n          </Accordion.Body>\n        </Accordion.Item>\n        <Accordion.Item eventKey=\"2\">\n          <Accordion.Header>\n            <PrimaryText size=\"1.5rem\" weight=\"400\">\n              Rating\n            </PrimaryText>\n          </Accordion.Header>\n          <Accordion.Body>\n            <div className=\"d-flex flex-column\">\n              <PrimaryText size=\"1.2rem\" weight=\"400\">\n                Work/Life balance\n              </PrimaryText>\n              <Text size=\"1.2rem\" weight=\"400\">\n                {rating && ratingStars(rating.balance)}\n              </Text>\n              <PrimaryText size=\"1.2rem\" weight=\"400\">\n                Work environment\n              </PrimaryText>\n              <Text size=\"1.2rem\" weight=\"400\">\n                {rating && ratingStars(rating.workplace)}\n              </Text>\n              <PrimaryText size=\"1.2rem\" weight=\"400\">\n                Management\n              </PrimaryText>\n              <Text size=\"1.2rem\" weight=\"400\">\n                {rating && ratingStars(rating.management)}\n              </Text>\n              <PrimaryText size=\"1.2rem\" weight=\"400\">\n                Benefits and perks\n              </PrimaryText>\n              <Text size=\"1.2rem\" weight=\"400\">\n                {rating && ratingStars(rating.benefits)}\n              </Text>\n            </div>\n          </Accordion.Body>\n        </Accordion.Item>\n        <Accordion.Item eventKey=\"3\">\n          <Accordion.Header>\n            <PrimaryText size=\"24px\" weight=\"400\">\n              Comments\n            </PrimaryText>\n          </Accordion.Header>\n          <Accordion.Body>\n            <div className=\"d-flex flex-column\">\n              <PrimaryText size=\"1.2rem\" weight=\"400\">\n                What are the pros of working for this school?\n              </PrimaryText>\n              <Text size=\"1.2rem\" weight=\"400\">\n                {pros && pros}\n              </Text>\n              <PrimaryText size=\"1.2rem\" weight=\"400\">\n                What are the cons of working for this school?\n              </PrimaryText>\n              <Text size=\"1.2rem\" weight=\"400\">\n                {cons && cons}\n              </Text>\n              <PrimaryText size=\"1.2rem\" weight=\"400\">\n                Leave your comments on the school below - feel free to write at\n                length\n              </PrimaryText>\n              <Text size=\"1.2rem\" weight=\"400\">\n                {comments && comments}\n              </Text>\n              <PrimaryText size=\"1.2rem\" weight=\"400\">\n                Would you recommend working here to a friend?\n              </PrimaryText>\n              <Text size=\"1.2rem\" weight=\"400\">\n                {recommend && recommend}\n              </Text>\n              <PrimaryText size=\"1.2rem\" weight=\"400\">\n                Do you have any advice for the management?\n              </PrimaryText>\n              <Text size=\"1.2rem\" weight=\"400\">\n                {advice && advice}\n              </Text>\n            </div>\n          </Accordion.Body>\n        </Accordion.Item>\n      </Accordion>\n    </>\n  );\n};\n","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/posts/PostItem.js",["345","346"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { addLike, removeLike, deletePost } from \"../../actions/post\";\n\nimport { PostItemCard } from \"../layout/Card\";\n\nconst PostItem = ({\n  addLike,\n  removeLike,\n  deletePost,\n  auth,\n  showActions,\n  post: { _id, text, name, user, likes, comments, date },\n}) => {\n  console.log(_id);\n\n  return (\n    <PostItemCard\n      id={_id}\n      likes={likes}\n      comments={comments}\n      linkToUser={`/profile/${user}`}\n      linkToPost={`/posts/${_id}`}\n      name={name}\n      user={user}\n      text={text}\n      date={date}\n      showActions={showActions}\n    />\n  );\n};\n// <div className=\"post bg-light my-1 p-1\">\n//   <div>\n//     <Link to={`/profile/${user}`}>\n//       <img className=\"round-img\" src={avatar} alt=\"\" />\n//       <h4>{name}</h4>\n//     </Link>\n//   </div>\n\n//   <div>\n//     <p>{text}</p>\n\n{\n  /* Only show the buttons if showActions is true */\n}\n\n//   </div>\n// </div>\n\nPostItem.defaultProps = {\n  showActions: true,\n};\n\nPostItem.propTypes = {\n  auth: PropTypes.object.isRequired,\n  post: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(\n  PostItem\n);\n","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/layout/Card.js",["347","348"],"import React from \"react\";\nimport { ReviewAccordion } from \"../reviews/ReviewAccordion\";\n\nimport ProfileImage from \"../layout/ProfileImage\";\n\nimport { connect } from \"react-redux\";\nimport { addLike, removeLike, deletePost } from \"../../actions/post\";\nimport {\n  DangerButton,\n  PlainLink,\n  PrimaryButton,\n  StyledLink,\n} from \"../../utils/styledComponents\";\n\nimport { Text, PrimaryText } from \"../../utils/styledComponents\";\n\nimport { Button, Card, Container, Row, Col, Image } from \"react-bootstrap\";\nimport formatDate from \"../../utils/formatDate\";\n\nexport const ProfileItemCard = ({\n  name,\n  avatar,\n  bio,\n  status,\n  school,\n  location,\n  link,\n}) => {\n  return (\n    <>\n      <>\n        <Card\n          style={{\n            margin: \"0.5rem 0rem 0.5rem 0rem\",\n            border: \"2px #41A0B3 solid\",\n          }}\n        >\n          <Card.Header\n            style={{\n              backgroundColor: \"#D7E8EB\",\n            }}\n          >\n            {\" \"}\n            <div className=\"d-flex flex-column align-items-center\">\n              {avatar ? (\n                <ProfileImage imageSize=\"6rem\" image={avatar} />\n              ) : (\n                <ProfileImage imageSize=\"6rem\" name={name} />\n              )}\n\n              <Text size=\"1.5rem\" weight=\"600\">\n                {name}\n              </Text>\n            </div>\n          </Card.Header>\n          <Card.Body>\n            <Card.Text>\n              <h5>\n                <i\n                  className=\"fas fa-graduation-cap\"\n                  style={{ color: \"#41a0b3\" }}\n                />\n                {\"  \"}\n                <Text size=\"1.3rem\" weight=\"600\">\n                  {status}\n                </Text>\n              </h5>\n\n              <h5>\n                <i className=\"fas fa-school\" style={{ color: \"#41a0b3\" }} />\n                {\"  \"}\n                <Text size=\"1.3rem\" weight=\"600\">\n                  {school && school}\n                </Text>\n              </h5>\n            </Card.Text>\n            <Card.Text>\n              <Text size=\"1.2rem\" weight=\"600\">\n                {bio && bio}\n              </Text>\n            </Card.Text>\n\n            <Card.Text className=\"d-flex justify-content-end\">\n              <h5>\n                <i className=\"fas fa-map-marker\" style={{ color: \"#41a0b3\" }} />{\" \"}\n                &nbsp;\n                <Text size=\"1.3rem\" weight=\"600\">\n                  {location}{\" \"}\n                </Text>\n              </h5>\n            </Card.Text>\n            <Card.Text className=\"d-flex justify-content-end\">\n              <PlainLink to={link}>\n                <PrimaryButton>View Profile</PrimaryButton>\n              </PlainLink>\n            </Card.Text>\n          </Card.Body>\n        </Card>\n      </>\n    </>\n  );\n};\n\nexport const ReviewItemCard = ({\n  name,\n  emoticon,\n  school,\n  location,\n  comments,\n  rating,\n  date,\n  link,\n}) => {\n  return (\n    <>\n      <Card\n        style={{\n          margin: \"0.5rem 0rem 0.5rem 0rem\",\n          border: \"2px #41A0B3 solid\",\n        }}\n      >\n        <Card.Header\n          style={{\n            backgroundColor: \"#D7E8EB\",\n          }}\n        >\n          {\" \"}\n          <Container className=\"d-flex justify-content-center\">\n            <Image style={{ width: \"50%\" }} src={emoticon} roundedCircle />\n          </Container>\n        </Card.Header>\n        <Card.Body style={{ padding: \"1rem 2rem 1rem 2rem\" }}>\n          {/* Name school */}\n\n          <Card.Text>\n            <Text size=\"1.3rem\" weight=\"600\">\n              {school}\n            </Text>\n          </Card.Text>\n          {/* Location */}\n          <Card.Text className=\"d-flex justify-content-end\">\n            <h5>\n              <i className=\"fas fa-map-marker\" style={{ color: \"#41a0b3\" }} />{\" \"}\n              &nbsp;\n              <Text size=\"1.3rem\" weight=\"600\">\n                {location}{\" \"}\n              </Text>\n            </h5>\n          </Card.Text>\n\n          {/* Teaser of review */}\n          <Card.Text>\n            <Text size=\"1.2rem\" weight=\"600\">\n              {comments ? (\n                <>{comments.slice(0, 100)} ...</>\n              ) : (\n                \"This review has no comments\"\n              )}\n            </Text>\n          </Card.Text>\n          {/* Rating */}\n          <Card.Text className=\"d-flex justify-content-end\">\n            <h5>\n              <i className=\"fas fa-star\" style={{ color: \"#41a0b3\" }} /> &nbsp;\n              <Text size=\"1.3rem\" weight=\"600\">\n                Score: {rating}\n              </Text>\n            </h5>\n          </Card.Text>\n          {/* Posted by, on */}\n          <Card.Text className=\"d-flex flex-column\">\n            <Text size=\"1rem\" weight=\"600\">\n              <i className=\"fas fa-user\" style={{ color: \"#41a0b3\" }} /> &nbsp;\n              Posted by: {name}\n            </Text>\n            <Text size=\"1rem\" weight=\"600\">\n              <i className=\"fas fa-calendar-alt\" style={{ color: \"#41a0b3\" }} />{\" \"}\n              &nbsp; On: {date}\n            </Text>\n          </Card.Text>\n\n          <Container>\n            <PlainLink to={link} className=\"d-grid\">\n              <PrimaryButton fontSize=\"1.2rem\">Read</PrimaryButton>\n            </PlainLink>\n          </Container>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nexport const ReviewCard = ({\n  review: {\n    name,\n    date,\n    formData: {\n      emoticon,\n      duration,\n      employmentstatus,\n      rating,\n      location,\n      school,\n      schooltype,\n    },\n    formData,\n  },\n}) => {\n  const averageRating = (\n    (rating.balance + rating.workplace + rating.management + rating.benefits) /\n    4\n  ).toFixed(1);\n\n  const ratingStars = (score) => {\n    let stars = [];\n    for (let step = 0; step < score; step++) {\n      stars.push(<i class=\"far fa-star\" />);\n    }\n\n    return stars;\n  };\n\n  return (\n    <>\n      <Card\n        style={{\n          margin: \"2rem 0rem 2rem 0rem\",\n          border: \"0.15rem #41A0B3 solid\",\n        }}\n      >\n        <Card.Header\n          style={{\n            backgroundColor: \"#D7E8EB\",\n          }}\n        >\n          {\" \"}\n          <div className=\"d-flex flex-column align-items-center\">\n            <Text size=\"2.2rem\" weight=\"600\">\n              {school}\n            </Text>\n            <Text size=\"1.5rem\" weight=\"400\">\n              {schooltype} in <strong>{location}</strong>\n            </Text>\n            <Container>\n              <Row className=\" py-2 d-flex justify-content-center\">\n                <Col lg={3} sm={4} xs={4}>\n                  <Image\n                    src={emoticon}\n                    roundedCircle\n                    style={{ maxWidth: \"90%\" }}\n                  />\n                </Col>\n              </Row>\n            </Container>\n            <Text size=\"2rem\" weight=\"400\">\n              {ratingStars(Math.floor(averageRating))} ({averageRating})\n            </Text>\n            <Container fluid className=\"d-flex justify-content-around py-3\">\n              <Text size=\"1.5rem\" weight=\"400\">\n                Posted by: {name}\n              </Text>\n\n              <Text size=\"1.5rem\" weight=\"400\">\n                Posted on: {formatDate(date)}\n              </Text>\n            </Container>\n\n            <Text size=\"1.5rem\" color=\"red\" className=\"text-center py-3\">\n              {name} worked / has been working {employmentstatus} at this school\n              for {duration}\n            </Text>\n          </div>\n        </Card.Header>\n        <Card.Body>\n          <ReviewAccordion formData={formData} />\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  post: state.post,\n});\n\nexport const PostItemCard = connect(mapStateToProps, {\n  addLike,\n  removeLike,\n  deletePost,\n})(\n  ({\n    id,\n    auth,\n    user,\n    name,\n    likes,\n    comments,\n    date,\n    text,\n    linkToUser,\n    linkToPost,\n    addLike,\n    removeLike,\n    deletePost,\n    showActions,\n  }) => {\n    return (\n      <Card\n        style={{\n          margin: \"0.5rem 0rem 0.5rem 0rem\",\n          border: \"0.1rem #41A0B3 solid\",\n        }}\n      >\n        <Card.Header>\n          <Container>\n            <Row>\n              <Col className=\"d-md-flex d-none align-items-center\" md={1}>\n                <ProfileImage name={name && name} />\n                {\"   \"}\n              </Col>\n              <Col\n                md={11}\n                className=\"d-flex flex-column justify-content-center\"\n              >\n                <StyledLink color=\"#41a0b3\" weight=\"600\" to={linkToUser}>\n                  <Text line=\"1\" size=\"1.5rem\">\n                    {name}\n                  </Text>\n                </StyledLink>\n                <Text line=\"1\" size=\"1rem\" weight=\"400\" color=\"grey\">\n                  EAL teacher\n                </Text>\n              </Col>\n            </Row>\n          </Container>\n        </Card.Header>\n        <Card.Body className=\"px-3\">\n          <Card.Text>\n            <Text size=\"1.2rem\" weight=\"400\">\n              {text}\n            </Text>\n          </Card.Text>\n\n          <Card.Text className=\"d-flex justify-content-end\">\n            <Text size=\"1.2rem\" color=\"grey\">\n              Posted on: {formatDate(date)}\n            </Text>\n          </Card.Text>\n        </Card.Body>\n        {showActions && (\n          <Card.Footer\n            className=\"\"\n            style={{\n              backgroundColor: \"#D7E8EB\",\n            }}\n          >\n            <Card.Text className=\"d-flex justify-content-end\">\n              <PrimaryButton onClick={() => addLike(id)}>\n                <i class=\"fas fa-thumbs-up\" /> Like (\n                {likes.length > 0 && likes.length})\n              </PrimaryButton>\n              &nbsp;\n              <PrimaryButton onClick={() => removeLike(id)}>\n                <i class=\"fas fa-thumbs-down\" /> Unlike\n              </PrimaryButton>\n              &nbsp;\n              <StyledLink to={linkToPost}>\n                <PrimaryButton>\n                  <i class=\"fas fa-comments\" /> Discussion{\" \"}\n                  {comments && comments.length > 0 && <> ({comments.length})</>}\n                </PrimaryButton>\n              </StyledLink>\n              &nbsp;\n              {!auth.loading && user === auth.user._id && (\n                <DangerButton onClick={() => deletePost(id)}>\n                  <i class=\"fas fa-trash-alt\" /> Delete\n                </DangerButton>\n              )}\n            </Card.Text>\n          </Card.Footer>\n        )}\n      </Card>\n    );\n  }\n);\n","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/dashboard/EducationItem.js",["349","350","351"],"import React from \"react\";\n\nimport {\n  DangerButton,\n  PrimaryButton,\n  StyledLink,\n} from \"../../utils/styledComponents\";\n\nimport formatDate from \"../../utils/formatDate\";\n\nimport { Text, PrimaryText } from \"../../utils/styledComponents\";\n\nimport {\n  Badge,\n  Button,\n  Card,\n  Container,\n  Row,\n  Col,\n  Image,\n} from \"react-bootstrap\";\n\nexport const EducationItem = ({ edu, deleteEducation }) => {\n  return (\n    <Card\n      style={{\n        margin: \"1rem 0rem 1rem 0rem\",\n        border: \"2px #41A0B3 solid\",\n      }}\n    >\n      <Card.Body className=\"px-3\">\n        <Container>\n          <Row>\n            <Col className=\"d-grid\">\n              <PrimaryText size=\"1.5rem\" line=\"1\">\n                {edu.degree} in {edu.fieldofstudy}\n              </PrimaryText>\n              <Text color=\"black\" size=\"1.2rem\">\n                {edu.school}\n              </Text>\n            </Col>\n            <Col className=\"d-flex flex-row justify-content-end\">\n              <Text size=\"1.2rem\">\n                {formatDate(edu.from)} to {edu.to ? formatDate(edu.to) : \"Now\"}\n              </Text>\n            </Col>\n          </Row>\n        </Container>\n        <Card.Text>\n          <Container>\n            <Text size=\"1rem\" line=\"1\">\n              {edu.description}\n            </Text>\n          </Container>\n        </Card.Text>\n      </Card.Body>\n\n      <Card.Footer\n        className=\"\"\n        style={{\n          backgroundColor: \"#D7E8EB\",\n        }}\n      >\n        <Card.Text className=\"d-flex justify-content-end\">\n          <StyledLink>\n            <PrimaryButton>\n              <i class=\"fas fa-edit\" /> Update\n            </PrimaryButton>\n          </StyledLink>\n          &nbsp;\n          <DangerButton onClick={deleteEducation}>\n            <i class=\"fas fa-trash-alt\" /> Delete\n          </DangerButton>\n        </Card.Text>\n      </Card.Footer>\n    </Card>\n  );\n};\n","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/dashboard/ExperienceItem.js",["352","353","354"],"import React from \"react\";\n\nimport {\n  DangerButton,\n  PrimaryButton,\n  StyledLink,\n} from \"../../utils/styledComponents\";\n\nimport formatDate from \"../../utils/formatDate\";\n\nimport { Text, PrimaryText } from \"../../utils/styledComponents\";\n\nimport {\n  Badge,\n  Button,\n  Card,\n  Container,\n  Row,\n  Col,\n  Image,\n} from \"react-bootstrap\";\n\nexport const ExperienceItem = ({ exp, deleteExperience }) => {\n  return (\n    <Card\n      style={{\n        margin: \"1rem 0rem 1rem 0rem\",\n        border: \"2px #41A0B3 solid\",\n      }}\n    >\n      <Card.Body className=\"px-3\">\n        <Container>\n          <Row>\n            <Col className=\"d-grid\">\n              <PrimaryText size=\"1.5rem\" line=\"1\">\n                {exp.title}\n              </PrimaryText>\n              <Text color=\"black\" size=\"1.2rem\">\n                {exp.school}\n              </Text>\n            </Col>\n            <Col className=\"d-flex flex-row justify-content-end\">\n              <Text size=\"1.2rem\">\n                {formatDate(exp.from)} to {exp.to ? formatDate(exp.to) : \"Now\"}\n              </Text>\n            </Col>\n          </Row>\n        </Container>\n        <Card.Text>\n          <Container>\n            <Text size=\"1rem\" line=\"1\">\n              {exp.description}\n            </Text>\n          </Container>\n        </Card.Text>\n      </Card.Body>\n\n      <Card.Footer\n        className=\"\"\n        style={{\n          backgroundColor: \"#D7E8EB\",\n        }}\n      >\n        <Card.Text className=\"d-flex justify-content-end\">\n          <StyledLink>\n            <PrimaryButton>\n              <i class=\"fas fa-edit\" /> Update\n            </PrimaryButton>\n          </StyledLink>\n          &nbsp;\n          <DangerButton onClick={deleteExperience}>\n            <i class=\"fas fa-trash-alt\" /> Delete\n          </DangerButton>\n        </Card.Text>\n      </Card.Footer>\n    </Card>\n  );\n};\n","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/utils/emojiList.js",[],"/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/utils/formatDate.js",[],"/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/reviews/Emoji.js",["355","356","357","358","359","360","361"],"import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport emojiList from \"../../utils/emojiList\";\n\nimport { Button, Container, Row, Col, Modal } from \"react-bootstrap\";\nimport ProfileImage from \"../layout/ProfileImage\";\n\n// const Emoji = ({ formData, emoji, onChangeEmoji }) => {\n//   const [checkEmoji, setCheckEmoji] = useState(\"\");\n\n//   return (\n//     <>\n//       <div className=\"emoticon\" onClick={onClick}>\n//         <img src={emoji} alt=\"\" />\n//         <div class={`check-mark ${checkEmoji}`}>\n//           <i class=\"fas fa-check-circle\"></i>\n//         </div>\n//       </div>\n//     </>\n//   );\n// };\n\nconst Emoji = ({ formData, setFormData }) => {\n  const [show, setShow] = useState(false);\n\n  const [emoji, setEmoji] = useState(\"\");\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const onChangeEmoji = (emoji) => {\n    setEmoji(emoji);\n\n    setFormData({\n      ...formData,\n      emoticon: emoji,\n    });\n\n    handleClose();\n  };\n\n  return (\n    <Container>\n      <Row className=\"d-flex justify-content-center py-3\">\n        <Col xl={2} lg={3} md={3} sm={4} xs={4}>\n          <img\n            onClick={handleShow}\n            style={{ maxWidth: \"90%\" }}\n            src={emoji ? emoji : emojiList[0]}\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col className=\"text-center\">Click on the emoticon to change it</Col>\n      </Row>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Choose an emoticon</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Container>\n            <Row>\n              {emojiList.map((emoticon) => (\n                <>\n                  <Col\n                    onClick={() => onChangeEmoji(emoticon)}\n                    className=\"py-1\"\n                    xs={6}\n                    lg={4}\n                    xl={3}\n                  >\n                    <img style={{ maxWidth: \"90%\" }} src={emoticon} />\n                  </Col>\n                  {/* <Emoji\n                formData={formData}\n                emoji={emoticon}\n                onChangeEmoji={onChangeEmoji}\n              /> */}\n                </>\n              ))}\n            </Row>\n          </Container>\n        </Modal.Body>\n      </Modal>\n    </Container>\n  );\n};\n\nexport default Emoji;\n","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/post/CommentForm.js",["362","363","364"],"import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addComment } from \"../../actions/post\";\n\nimport { Button, Form, Container, Row, Col, Image } from \"react-bootstrap\";\n\nimport { Text } from \"../../utils/styledComponents\";\n\nconst CommentForm = ({ postId, addComment }) => {\n  const [text, setText] = useState(\"\");\n\n  return (\n    <>\n      <div className=\"p-3\">\n        <Container\n          style={{\n            padding: \"0.5rem 1rem\",\n            backgroundColor: \"#D7E8EB\",\n            border: \"0.15rem solid #41a0b3\",\n          }}\n        >\n          <Text color=\"#41a0b3\" size=\"1.5rem\">\n            Say something...\n          </Text>\n        </Container>\n        <Form\n          onSubmit={(e) => {\n            e.preventDefault();\n            addComment(postId, { text });\n            setText(\"\");\n          }}\n        >\n          <Form.Group className=\"mb-3\">\n            <Form.Control\n              style={{\n                border: \"0.15rem solid #41a0b3\",\n                borderTop: \"0rem\",\n              }}\n              as=\"textarea\"\n              placeholder=\"Create a post\"\n              rows={5}\n              value={text}\n              onChange={(e) => setText(e.target.value)}\n            />\n          </Form.Group>\n          <Container className=\"p-2 d-grid\">\n            <Button type=\"submit\" size=\"lg\" variant=\"success\">\n              Submit\n            </Button>\n          </Container>\n        </Form>\n      </div>\n    </>\n  );\n};\n\nCommentForm.propTypes = {\n  addComment: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addComment })(CommentForm);\n","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/post/CommentItem.js",["365","366"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport formatDate from \"../../utils/formatDate\";\nimport { removeComment } from \"../../actions/post\";\n\nimport ProfileImage from \"../layout/ProfileImage\";\nimport { DangerButton, StyledLink, Text } from \"../../utils/styledComponents\";\n\nimport { Card, Container, Row, Col, Image } from \"react-bootstrap\";\n\nconst CommentItem = ({\n  postId,\n  comment: { _id, text, name, avatar, user, date },\n  auth,\n  removeComment,\n}) => (\n  <>\n    <Card\n      style={{\n        margin: \"1rem\",\n        border: \"2px #41A0B3 solid\",\n      }}\n    >\n      <Card.Header\n        className=\"\"\n        style={{\n          backgroundColor: \"#D7E8EB\",\n        }}\n      >\n        <Container>\n          <Row>\n            <Col className=\"d-none d-md-block\" sm={2} lg={1} xl={1}>\n              <ProfileImage margin=\"0rem\" size={50} name={name} />\n              {\"   \"}\n            </Col>\n            <Col\n              sm={10}\n              lg={11}\n              xl={11}\n              className=\"d-flex flex-column justify-content-center\"\n            >\n              <StyledLink color=\"#41a0b3\" weight=\"600\" to={`/profile/${user}`}>\n                <Text line=\"1\" size=\"1.5rem\">\n                  {name}\n                </Text>\n              </StyledLink>\n              <Text line=\"1\" size=\"1rem\" weight=\"400\" color=\"#41a0b3\">\n                EAL teacher\n              </Text>\n            </Col>\n          </Row>\n        </Container>\n      </Card.Header>\n      <Card.Body className=\"px-3\">\n        <Card.Text>\n          <Text size=\"1.2rem\" weight=\"400\">\n            {text}\n          </Text>\n        </Card.Text>\n\n        <Card.Text className=\"d-flex justify-content-end\">\n          <Text size=\"1.2rem\">{formatDate(date)}</Text>\n        </Card.Text>\n      </Card.Body>\n      {!auth.loading && user === auth.user._id && (\n        <Card.Footer\n          className=\"\"\n          style={{\n            backgroundColor: \"#D7E8EB\",\n          }}\n        >\n          <Card.Text className=\"d-flex justify-content-end\">\n            <DangerButton onClick={() => removeComment(postId, _id)}>\n              <i class=\"fas fa-trash-alt\" /> Delete\n            </DangerButton>\n          </Card.Text>\n        </Card.Footer>\n      )}\n    </Card>\n    {/* <div className=\"post bg-light-primary p-1 my-1\">\n    <div>\n      <Link to={`/profile/${user}`}>\n        <img className=\"round-img\" src={avatar} alt=\"\" />\n        <h4>{name}</h4>\n      </Link>\n    </div>\n    <div>\n      <p className=\"my-1\">{text}</p>\n      <p className=\"post-date\">Posted on {formatDate(date)}</p>\n      {!auth.loading && user === auth.user._id && (\n        <button\n          onClick={() => removeComment(postId, _id)}\n          type=\"button\"\n          className=\"btn btn-danger\"\n        >\n          <i className=\"fas fa-times\" />\n        </button>\n      )}\n    </div>\n  </div> */}\n  </>\n);\n\nCommentItem.propTypes = {\n  postId: PropTypes.string.isRequired,\n  comment: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  removeComment: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { removeComment })(CommentItem);\n","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/profiles/ProfileItem.js",["367","368","369","370","371","372","373","374","375","376","377"],"import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport ProfileImage from \"../layout/ProfileImage\";\nimport { ProfileItemCard } from \"../layout/Card\";\n\nimport { Link } from \"react-router-dom\";\nimport {\n  Badge,\n  Button,\n  Card,\n  Container,\n  Row,\n  Col,\n  Image,\n} from \"react-bootstrap\";\n\nconst StyledButton = styled(Button)`\n  border: 2px solid #41a0b3;\n  color: #41a0b3;\n`;\n\nconst ProfileItem = ({\n  profile: {\n    user: { _id, name },\n    avatar,\n    status,\n    school,\n    location,\n    bio,\n    languages,\n  },\n}) => {\n  return (\n    <>\n      <ProfileItemCard\n        avatar={avatar}\n        name={name}\n        bio={bio}\n        status={status}\n        school={school}\n        location={location}\n        link={`/profile/${_id}`}\n      />\n    </>\n  );\n};\n\nProfileItem.propTypes = {};\n\nexport default ProfileItem;\n","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/profile/ProfileAccordion.js",["378"],"import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport formatDate from \"../../utils/formatDate\";\nimport styled from \"styled-components\";\n\nconst ProfileAccordion = ({\n  profile: {\n    bio,\n    experience,\n    education,\n    social,\n    user: { name, avatar },\n  },\n}) => {\n  const Text = styled.p`\n    color: #41a0b3;\n    font-size: ${(props) => props.size};\n    font-weight: ${(props) => props.weight};\n    font-family: \"Raleway\";\n  `;\n\n  return (\n    <Accordion defaultActiveKey=\"0\" flush>\n      <Accordion.Item eventKey=\"0\">\n        <Accordion.Header>\n          <Text size=\"24px\" weight=\"400\">\n            My bio\n          </Text>\n        </Accordion.Header>\n        <Accordion.Body>{bio}</Accordion.Body>\n      </Accordion.Item>\n      <Accordion.Item eventKey=\"1\">\n        <Accordion.Header>\n          <Text size=\"24px\" weight=\"400\">\n            Experiences\n          </Text>\n        </Accordion.Header>\n        <Accordion.Body>\n          {experience.length > 0 ? (\n            <>\n              {experience.map((experience) => (\n                <div>\n                  <h3>{experience.school}</h3>\n                  <p>\n                    {formatDate(experience.from)} to{\" \"}\n                    {experience.to ? formatDate(experience.to) : \"now\"}\n                  </p>\n                  <p>\n                    <strong>Position: </strong>\n                    {experience.title}\n                  </p>\n                  <p>\n                    <strong>Description: </strong>\n                    {experience.description}\n                  </p>\n                </div>\n              ))}\n            </>\n          ) : (\n            <h5> No experience credentials</h5>\n          )}\n        </Accordion.Body>\n      </Accordion.Item>\n      <Accordion.Item eventKey=\"2\">\n        <Accordion.Header>\n          <Text size=\"24px\" weight=\"400\">\n            Education\n          </Text>\n        </Accordion.Header>\n        <Accordion.Body>\n          {education.length > 0 ? (\n            <>\n              {education.map((education) => (\n                <div>\n                  <h3>{education.school}</h3>\n                  <p>\n                    {formatDate(education.from)} to{\" \"}\n                    {education.to ? formatDate(education.to) : \"Now\"}\n                  </p>\n                  <p>\n                    <strong>Degree: </strong> {education.degree}\n                  </p>\n                  <p>\n                    <strong>Field of study: </strong> {education.fieldofstudy}\n                  </p>\n                  <p>\n                    <strong>Description: </strong> {education.description}\n                  </p>\n                </div>\n              ))}\n            </>\n          ) : (\n            <h5> No education credentials</h5>\n          )}\n        </Accordion.Body>\n      </Accordion.Item>\n    </Accordion>\n  );\n};\n\nProfileAccordion.propTypes = {\n  //profile: PropTypes.object.isRequired,\n};\n\nexport default ProfileAccordion;\n","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/components/dashboard/DashboardActions.js",["379","380","381"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport {\n  PlainLink,\n  PrimaryButton,\n  PrimaryText,\n} from \"../../utils/styledComponents\";\n\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\n\nconst DashboardActions = () => {\n  return (\n    <>\n      <Container>\n        <Row>\n          <Col xs={12} lg={6} className=\"p-2\">\n            <PlainLink to=\"/edit-profile\">\n              <div className=\"d-grid\">\n                <PrimaryButton size=\"lg\" fontSize=\"1.5rem\">\n                  <i className=\"fas fa-user-circle\" /> Edit profile\n                </PrimaryButton>\n              </div>\n            </PlainLink>\n          </Col>\n          <Col xs={12} lg={6} className=\"p-2\">\n            <PlainLink to=\"/leave-review\">\n              <div className=\"d-grid\">\n                <PrimaryButton size=\"lg\" fontSize=\"1.5rem\">\n                  <i class=\"fas fa-edit \" /> Leave a review\n                </PrimaryButton>\n              </div>\n            </PlainLink>\n          </Col>\n\n          <Col xs={12} lg={6} className=\"p-2\">\n            <PlainLink to=\"/my-experience\">\n              <div className=\"d-grid\">\n                <PrimaryButton size=\"lg\" fontSize=\"1.5rem\">\n                  <i class=\"fab fa-black-tie\" /> My experience\n                </PrimaryButton>\n              </div>\n            </PlainLink>\n          </Col>\n          <Col xs={12} lg={6} className=\"p-2 d-grid\">\n            <PlainLink to=\"/my-education\">\n              <div className=\"d-grid\">\n                <PrimaryButton size=\"lg\" fontSize=\"1.5rem\">\n                  <i class=\"fas fa-graduation-cap\" /> My education\n                </PrimaryButton>\n              </div>\n            </PlainLink>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nexport default DashboardActions;\n","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/reducers/index.js",[],"/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/utils/avatarList.js",[],"/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/reducers/alert.js",["382"],"import { SET_ALERT, REMOVE_ALERT } from \"../actions/types\";\n\nconst initialState = [];\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case SET_ALERT:\n      return [...state, payload];\n    case REMOVE_ALERT:\n      return state.filter((alert) => alert.id !== payload);\n    default:\n      return state;\n  }\n}\n","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/reducers/review.js",["383","384"],"import {\n  GET_REVIEWS,\n  GET_REVIEW,\n  REVIEW_ERROR,\n  ADD_REVIEW,\n  DELETE_REVIEW,\n} from \"../actions/types\";\n\nconst initialState = {\n  reviews: [],\n  review: null,\n  loading: true,\n  error: {},\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_REVIEWS:\n      return {\n        ...state,\n        reviews: payload,\n        loading: false,\n      };\n\n    case GET_REVIEW:\n      return {\n        ...state,\n        review: payload,\n        loading: false,\n      };\n\n    case ADD_REVIEW:\n      return {\n        ...state,\n        reviews: [payload, ...state.reviews],\n        loading: false,\n      };\n\n    case REVIEW_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false,\n      };\n\n    default:\n      return state;\n  }\n}\n","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/reducers/auth.js",[],"/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/reducers/profile.js",["385"],"import {\n  GET_PROFILE,\n  GET_PROFILES,\n  UPDATE_PROFILE,\n  CLEAR_PROFILE,\n  PROFILE_ERROR,\n} from \"../actions/types\";\n\nconst initialState = {\n  profile: null,\n  profiles: [],\n  loading: true,\n  error: {},\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_PROFILE:\n    case UPDATE_PROFILE:\n      return {\n        ...state,\n        profile: payload,\n        loading: false,\n      };\n    case GET_PROFILES:\n      return {\n        ...state,\n        profiles: payload,\n        loading: false,\n      };\n    case PROFILE_ERROR:\n      return {\n        ...state,\n        loading: false,\n        error: payload,\n      };\n    case CLEAR_PROFILE:\n      return {\n        ...state,\n        profile: null,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n","/Users/apple/Desktop/Coding/react/react-teacher-connector/client/src/reducers/post.js",["386"],"import {\n  DELETE_POST,\n  GET_POSTS,\n  GET_POST,\n  ADD_POST,\n  POST_ERROR,\n  ADD_COMMENT,\n  REMOVE_COMMENT,\n  UPDATE_LIKES,\n} from \"../actions/types\";\n\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {},\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_POSTS:\n      return {\n        ...state,\n        posts: payload,\n        loading: false,\n      };\n    case GET_POST:\n      return {\n        ...state,\n        post: payload,\n        loading: false,\n      };\n    case ADD_POST:\n      return {\n        ...state,\n        posts: [payload, ...state.posts],\n        loading: false,\n      };\n    case DELETE_POST:\n      return {\n        ...state,\n        posts: state.posts.filter((post) => post._id !== payload),\n        loading: false,\n      };\n\n    case POST_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false,\n      };\n\n    case UPDATE_LIKES:\n      return {\n        ...state,\n        posts: state.posts.map((post) =>\n          post._id === payload.id ? { ...post, likes: payload.likes } : post\n        ),\n        // remember, each like is an array that contains the user id\n        // and the post id (maybe???)\n        loading: false,\n      };\n\n    case ADD_COMMENT:\n      return {\n        ...state,\n        post: { ...state.post, comments: payload },\n        loading: false,\n      };\n\n    case REMOVE_COMMENT:\n      return {\n        ...state,\n        post: {\n          ...state.post,\n          comments: state.post.comments.filter(\n            (comment) => comment._id !== payload\n          ),\n          loading: false,\n        },\n      };\n\n    default:\n      return state;\n  }\n}\n",{"ruleId":"387","replacedBy":"388"},{"ruleId":"389","replacedBy":"390"},{"ruleId":"391","severity":1,"message":"392","line":1,"column":40,"nodeType":"393","messageId":"394","endLine":1,"endColumn":47},{"ruleId":"391","severity":1,"message":"395","line":1,"column":17,"nodeType":"393","messageId":"394","endLine":1,"endColumn":25},{"ruleId":"391","severity":1,"message":"396","line":1,"column":27,"nodeType":"393","messageId":"394","endLine":1,"endColumn":36},{"ruleId":"391","severity":1,"message":"397","line":6,"column":10,"nodeType":"393","messageId":"394","endLine":6,"endColumn":14},{"ruleId":"391","severity":1,"message":"398","line":8,"column":8,"nodeType":"393","messageId":"394","endLine":8,"endColumn":17},{"ruleId":"391","severity":1,"message":"399","line":10,"column":10,"nodeType":"393","messageId":"394","endLine":10,"endColumn":27},{"ruleId":"391","severity":1,"message":"400","line":1,"column":17,"nodeType":"393","messageId":"394","endLine":1,"endColumn":25},{"ruleId":"391","severity":1,"message":"397","line":2,"column":10,"nodeType":"393","messageId":"394","endLine":2,"endColumn":14},{"ruleId":"391","severity":1,"message":"401","line":13,"column":16,"nodeType":"393","messageId":"394","endLine":13,"endColumn":27},{"ruleId":"391","severity":1,"message":"397","line":4,"column":10,"nodeType":"393","messageId":"394","endLine":4,"endColumn":14},{"ruleId":"391","severity":1,"message":"402","line":64,"column":5,"nodeType":"393","messageId":"394","endLine":64,"endColumn":8},{"ruleId":"403","severity":1,"message":"404","line":114,"column":17,"nodeType":"405","endLine":114,"endColumn":44},{"ruleId":"391","severity":1,"message":"397","line":3,"column":10,"nodeType":"393","messageId":"394","endLine":3,"endColumn":14},{"ruleId":"391","severity":1,"message":"406","line":6,"column":10,"nodeType":"393","messageId":"394","endLine":6,"endColumn":16},{"ruleId":"391","severity":1,"message":"407","line":8,"column":3,"nodeType":"393","messageId":"394","endLine":8,"endColumn":9},{"ruleId":"391","severity":1,"message":"408","line":9,"column":3,"nodeType":"393","messageId":"394","endLine":9,"endColumn":7},{"ruleId":"391","severity":1,"message":"397","line":4,"column":10,"nodeType":"393","messageId":"394","endLine":4,"endColumn":14},{"ruleId":"391","severity":1,"message":"409","line":12,"column":3,"nodeType":"393","messageId":"394","endLine":12,"endColumn":13},{"ruleId":"391","severity":1,"message":"406","line":20,"column":3,"nodeType":"393","messageId":"394","endLine":20,"endColumn":9},{"ruleId":"410","severity":1,"message":"411","line":85,"column":6,"nodeType":"412","endLine":85,"endColumn":34,"suggestions":"413"},{"ruleId":"391","severity":1,"message":"402","line":98,"column":5,"nodeType":"393","messageId":"394","endLine":98,"endColumn":8},{"ruleId":"403","severity":1,"message":"404","line":160,"column":17,"nodeType":"405","endLine":160,"endColumn":44},{"ruleId":"391","severity":1,"message":"397","line":3,"column":10,"nodeType":"393","messageId":"394","endLine":3,"endColumn":14},{"ruleId":"391","severity":1,"message":"408","line":7,"column":3,"nodeType":"393","messageId":"394","endLine":7,"endColumn":7},{"ruleId":"391","severity":1,"message":"406","line":14,"column":10,"nodeType":"393","messageId":"394","endLine":14,"endColumn":16},{"ruleId":"391","severity":1,"message":"397","line":3,"column":10,"nodeType":"393","messageId":"394","endLine":3,"endColumn":14},{"ruleId":"391","severity":1,"message":"414","line":8,"column":8,"nodeType":"393","messageId":"394","endLine":8,"endColumn":14},{"ruleId":"391","severity":1,"message":"408","line":10,"column":3,"nodeType":"393","messageId":"394","endLine":10,"endColumn":7},{"ruleId":"391","severity":1,"message":"406","line":17,"column":10,"nodeType":"393","messageId":"394","endLine":17,"endColumn":16},{"ruleId":"391","severity":1,"message":"415","line":17,"column":35,"nodeType":"393","messageId":"394","endLine":17,"endColumn":38},{"ruleId":"391","severity":1,"message":"416","line":17,"column":40,"nodeType":"393","messageId":"394","endLine":17,"endColumn":43},{"ruleId":"410","severity":1,"message":"417","line":14,"column":6,"nodeType":"412","endLine":14,"endColumn":15,"suggestions":"418"},{"ruleId":"391","severity":1,"message":"419","line":3,"column":8,"nodeType":"393","messageId":"394","endLine":3,"endColumn":18},{"ruleId":"391","severity":1,"message":"396","line":1,"column":27,"nodeType":"393","messageId":"394","endLine":1,"endColumn":36},{"ruleId":"391","severity":1,"message":"397","line":4,"column":10,"nodeType":"393","messageId":"394","endLine":4,"endColumn":14},{"ruleId":"391","severity":1,"message":"420","line":4,"column":16,"nodeType":"393","messageId":"394","endLine":4,"endColumn":26},{"ruleId":"391","severity":1,"message":"421","line":6,"column":8,"nodeType":"393","messageId":"394","endLine":6,"endColumn":17},{"ruleId":"391","severity":1,"message":"422","line":11,"column":3,"nodeType":"393","messageId":"394","endLine":11,"endColumn":8},{"ruleId":"391","severity":1,"message":"406","line":12,"column":3,"nodeType":"393","messageId":"394","endLine":12,"endColumn":9},{"ruleId":"391","severity":1,"message":"423","line":14,"column":3,"nodeType":"393","messageId":"394","endLine":14,"endColumn":12},{"ruleId":"391","severity":1,"message":"415","line":15,"column":3,"nodeType":"393","messageId":"394","endLine":15,"endColumn":6},{"ruleId":"391","severity":1,"message":"416","line":16,"column":3,"nodeType":"393","messageId":"394","endLine":16,"endColumn":6},{"ruleId":"391","severity":1,"message":"424","line":17,"column":3,"nodeType":"393","messageId":"394","endLine":17,"endColumn":8},{"ruleId":"391","severity":1,"message":"425","line":56,"column":5,"nodeType":"393","messageId":"394","endLine":56,"endColumn":13},{"ruleId":"391","severity":1,"message":"426","line":95,"column":9,"nodeType":"393","messageId":"394","endLine":95,"endColumn":22},{"ruleId":"391","severity":1,"message":"419","line":3,"column":8,"nodeType":"393","messageId":"394","endLine":3,"endColumn":18},{"ruleId":"391","severity":1,"message":"427","line":8,"column":3,"nodeType":"393","messageId":"394","endLine":8,"endColumn":15},{"ruleId":"391","severity":1,"message":"409","line":13,"column":3,"nodeType":"393","messageId":"394","endLine":13,"endColumn":13},{"ruleId":"391","severity":1,"message":"401","line":16,"column":16,"nodeType":"393","messageId":"394","endLine":16,"endColumn":27},{"ruleId":"391","severity":1,"message":"422","line":19,"column":3,"nodeType":"393","messageId":"394","endLine":19,"endColumn":8},{"ruleId":"391","severity":1,"message":"406","line":20,"column":3,"nodeType":"393","messageId":"394","endLine":20,"endColumn":9},{"ruleId":"391","severity":1,"message":"428","line":21,"column":3,"nodeType":"393","messageId":"394","endLine":21,"endColumn":7},{"ruleId":"391","severity":1,"message":"423","line":22,"column":3,"nodeType":"393","messageId":"394","endLine":22,"endColumn":12},{"ruleId":"391","severity":1,"message":"415","line":23,"column":3,"nodeType":"393","messageId":"394","endLine":23,"endColumn":6},{"ruleId":"391","severity":1,"message":"416","line":24,"column":3,"nodeType":"393","messageId":"394","endLine":24,"endColumn":6},{"ruleId":"391","severity":1,"message":"424","line":25,"column":3,"nodeType":"393","messageId":"394","endLine":25,"endColumn":8},{"ruleId":"391","severity":1,"message":"429","line":3,"column":10,"nodeType":"393","messageId":"394","endLine":3,"endColumn":25},{"ruleId":"391","severity":1,"message":"414","line":8,"column":8,"nodeType":"393","messageId":"394","endLine":8,"endColumn":14},{"ruleId":"391","severity":1,"message":"422","line":11,"column":3,"nodeType":"393","messageId":"394","endLine":11,"endColumn":8},{"ruleId":"391","severity":1,"message":"406","line":12,"column":3,"nodeType":"393","messageId":"394","endLine":12,"endColumn":9},{"ruleId":"391","severity":1,"message":"428","line":13,"column":3,"nodeType":"393","messageId":"394","endLine":13,"endColumn":7},{"ruleId":"391","severity":1,"message":"424","line":17,"column":3,"nodeType":"393","messageId":"394","endLine":17,"endColumn":8},{"ruleId":"391","severity":1,"message":"430","line":21,"column":3,"nodeType":"393","messageId":"394","endLine":21,"endColumn":12},{"ruleId":"391","severity":1,"message":"431","line":22,"column":3,"nodeType":"393","messageId":"394","endLine":22,"endColumn":18},{"ruleId":"391","severity":1,"message":"415","line":3,"column":35,"nodeType":"393","messageId":"394","endLine":3,"endColumn":38},{"ruleId":"391","severity":1,"message":"416","line":3,"column":40,"nodeType":"393","messageId":"394","endLine":3,"endColumn":43},{"ruleId":"391","severity":1,"message":"397","line":3,"column":10,"nodeType":"393","messageId":"394","endLine":3,"endColumn":14},{"ruleId":"391","severity":1,"message":"420","line":3,"column":16,"nodeType":"393","messageId":"394","endLine":3,"endColumn":26},{"ruleId":"391","severity":1,"message":"432","line":14,"column":9,"nodeType":"393","messageId":"394","endLine":14,"endColumn":16},{"ruleId":"391","severity":1,"message":"433","line":20,"column":10,"nodeType":"393","messageId":"394","endLine":20,"endColumn":14},{"ruleId":"391","severity":1,"message":"434","line":22,"column":9,"nodeType":"393","messageId":"394","endLine":22,"endColumn":20},{"ruleId":"391","severity":1,"message":"435","line":23,"column":9,"nodeType":"393","messageId":"394","endLine":23,"endColumn":19},{"ruleId":"391","severity":1,"message":"414","line":2,"column":8,"nodeType":"393","messageId":"394","endLine":2,"endColumn":14},{"ruleId":"391","severity":1,"message":"424","line":3,"column":10,"nodeType":"393","messageId":"394","endLine":3,"endColumn":15},{"ruleId":"436","severity":1,"message":"437","line":16,"column":7,"nodeType":"405","endLine":29,"endColumn":8},{"ruleId":"391","severity":1,"message":"438","line":6,"column":3,"nodeType":"393","messageId":"394","endLine":6,"endColumn":16},{"ruleId":"391","severity":1,"message":"396","line":1,"column":17,"nodeType":"393","messageId":"394","endLine":1,"endColumn":26},{"ruleId":"391","severity":1,"message":"397","line":3,"column":10,"nodeType":"393","messageId":"394","endLine":3,"endColumn":14},{"ruleId":"391","severity":1,"message":"439","line":132,"column":11,"nodeType":"393","messageId":"394","endLine":132,"endColumn":14},{"ruleId":"391","severity":1,"message":"419","line":3,"column":8,"nodeType":"393","messageId":"394","endLine":3,"endColumn":18},{"ruleId":"391","severity":1,"message":"414","line":4,"column":8,"nodeType":"393","messageId":"394","endLine":4,"endColumn":14},{"ruleId":"391","severity":1,"message":"440","line":6,"column":10,"nodeType":"393","messageId":"394","endLine":6,"endColumn":17},{"ruleId":"391","severity":1,"message":"397","line":3,"column":10,"nodeType":"393","messageId":"394","endLine":3,"endColumn":14},{"ruleId":"441","severity":1,"message":"442","line":45,"column":1,"nodeType":"443","messageId":"444","endLine":47,"endColumn":2},{"ruleId":"391","severity":1,"message":"401","line":15,"column":16,"nodeType":"393","messageId":"394","endLine":15,"endColumn":27},{"ruleId":"391","severity":1,"message":"406","line":17,"column":10,"nodeType":"393","messageId":"394","endLine":17,"endColumn":16},{"ruleId":"391","severity":1,"message":"422","line":14,"column":3,"nodeType":"393","messageId":"394","endLine":14,"endColumn":8},{"ruleId":"391","severity":1,"message":"406","line":15,"column":3,"nodeType":"393","messageId":"394","endLine":15,"endColumn":9},{"ruleId":"391","severity":1,"message":"424","line":20,"column":3,"nodeType":"393","messageId":"394","endLine":20,"endColumn":8},{"ruleId":"391","severity":1,"message":"422","line":14,"column":3,"nodeType":"393","messageId":"394","endLine":14,"endColumn":8},{"ruleId":"391","severity":1,"message":"406","line":15,"column":3,"nodeType":"393","messageId":"394","endLine":15,"endColumn":9},{"ruleId":"391","severity":1,"message":"424","line":20,"column":3,"nodeType":"393","messageId":"394","endLine":20,"endColumn":8},{"ruleId":"391","severity":1,"message":"398","line":2,"column":8,"nodeType":"393","messageId":"394","endLine":2,"endColumn":17},{"ruleId":"391","severity":1,"message":"397","line":3,"column":10,"nodeType":"393","messageId":"394","endLine":3,"endColumn":14},{"ruleId":"391","severity":1,"message":"445","line":4,"column":10,"nodeType":"393","messageId":"394","endLine":4,"endColumn":17},{"ruleId":"391","severity":1,"message":"406","line":7,"column":10,"nodeType":"393","messageId":"394","endLine":7,"endColumn":16},{"ruleId":"391","severity":1,"message":"446","line":8,"column":8,"nodeType":"393","messageId":"394","endLine":8,"endColumn":20},{"ruleId":"447","severity":1,"message":"448","line":48,"column":11,"nodeType":"405","endLine":52,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":75,"column":21,"nodeType":"405","endLine":75,"endColumn":71},{"ruleId":"391","severity":1,"message":"415","line":6,"column":35,"nodeType":"393","messageId":"394","endLine":6,"endColumn":38},{"ruleId":"391","severity":1,"message":"416","line":6,"column":40,"nodeType":"393","messageId":"394","endLine":6,"endColumn":43},{"ruleId":"391","severity":1,"message":"424","line":6,"column":45,"nodeType":"393","messageId":"394","endLine":6,"endColumn":50},{"ruleId":"391","severity":1,"message":"397","line":2,"column":10,"nodeType":"393","messageId":"394","endLine":2,"endColumn":14},{"ruleId":"391","severity":1,"message":"424","line":11,"column":37,"nodeType":"393","messageId":"394","endLine":11,"endColumn":42},{"ruleId":"391","severity":1,"message":"396","line":1,"column":17,"nodeType":"393","messageId":"394","endLine":1,"endColumn":26},{"ruleId":"391","severity":1,"message":"398","line":2,"column":8,"nodeType":"393","messageId":"394","endLine":2,"endColumn":17},{"ruleId":"391","severity":1,"message":"446","line":4,"column":8,"nodeType":"393","messageId":"394","endLine":4,"endColumn":20},{"ruleId":"391","severity":1,"message":"397","line":7,"column":10,"nodeType":"393","messageId":"394","endLine":7,"endColumn":14},{"ruleId":"391","severity":1,"message":"422","line":9,"column":3,"nodeType":"393","messageId":"394","endLine":9,"endColumn":8},{"ruleId":"391","severity":1,"message":"428","line":11,"column":3,"nodeType":"393","messageId":"394","endLine":11,"endColumn":7},{"ruleId":"391","severity":1,"message":"423","line":12,"column":3,"nodeType":"393","messageId":"394","endLine":12,"endColumn":12},{"ruleId":"391","severity":1,"message":"415","line":13,"column":3,"nodeType":"393","messageId":"394","endLine":13,"endColumn":6},{"ruleId":"391","severity":1,"message":"416","line":14,"column":3,"nodeType":"393","messageId":"394","endLine":14,"endColumn":6},{"ruleId":"391","severity":1,"message":"424","line":15,"column":3,"nodeType":"393","messageId":"394","endLine":15,"endColumn":8},{"ruleId":"391","severity":1,"message":"449","line":18,"column":7,"nodeType":"393","messageId":"394","endLine":18,"endColumn":19},{"ruleId":"391","severity":1,"message":"398","line":2,"column":8,"nodeType":"393","messageId":"394","endLine":2,"endColumn":17},{"ruleId":"391","severity":1,"message":"397","line":2,"column":10,"nodeType":"393","messageId":"394","endLine":2,"endColumn":14},{"ruleId":"391","severity":1,"message":"401","line":7,"column":3,"nodeType":"393","messageId":"394","endLine":7,"endColumn":14},{"ruleId":"391","severity":1,"message":"406","line":10,"column":10,"nodeType":"393","messageId":"394","endLine":10,"endColumn":16},{"ruleId":"450","severity":1,"message":"451","line":5,"column":1,"nodeType":"452","endLine":16,"endColumn":2},{"ruleId":"391","severity":1,"message":"438","line":6,"column":3,"nodeType":"393","messageId":"394","endLine":6,"endColumn":16},{"ruleId":"450","severity":1,"message":"451","line":16,"column":1,"nodeType":"452","endLine":51,"endColumn":2},{"ruleId":"450","severity":1,"message":"451","line":16,"column":1,"nodeType":"452","endLine":48,"endColumn":2},{"ruleId":"450","severity":1,"message":"451","line":19,"column":1,"nodeType":"452","endLine":88,"endColumn":2},"no-native-reassign",["453"],"no-negated-in-lhs",["454"],"no-unused-vars","'compose' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'PropTypes' is defined but never used.","'useMediaPredicate' is defined but never used.","'Fragment' is defined but never used.","'PrimaryText' is defined but never used.","'sex' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Button' is defined but never used.","'Header' is defined but never used.","'Text' is defined but never used.","'StyledLink' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'profile.avatar', 'profile.bio', 'profile.email', 'profile.location', 'profile.nationality', 'profile.phone', 'profile.school', 'profile.sex', 'profile.social.facebook', 'profile.social.instagram', 'profile.social.linkedin', 'profile.social.twitter', 'profile.social.youtube', 'profile.status', 'profile.wechat', and 'profile.yearsofexperience'. Either include them or remove the dependency array. If 'setFormData' needs the current value of 'profile.sex', you can also switch to useReducer instead of useState and read 'profile.sex' in the reducer.","ArrayExpression",["455"],"'styled' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.",["456"],"'formatDate' is defined but never used.","'withRouter' is defined but never used.","'emojiList' is defined but never used.","'Badge' is defined but never used.","'Container' is defined but never used.","'Image' is defined but never used.","'emoticon' is assigned a value but never used.","'onChangeEmoji' is assigned a value but never used.","'DangerButton' is defined but never used.","'Card' is defined but never used.","'ReviewAccordion' is defined but never used.","'PlainLink' is defined but never used.","'SecondaryButton' is defined but never used.","'avatars' is assigned a value but never used.","'show' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'handleShow' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'DELETE_REVIEW' is defined but never used.","'res' is assigned a value but never used.","'Spinner' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'connect' is defined but never used.","'ProfileImage' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'StyledButton' is assigned a value but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"457","fix":"458"},{"desc":"459","fix":"460"},"Update the dependencies array to be: [loading, getCurrentProfile, profile.sex, profile.nationality, profile.avatar, profile.yearsofexperience, profile.school, profile.location, profile.status, profile.bio, profile.phone, profile.wechat, profile.email, profile.social.twitter, profile.social.facebook, profile.social.linkedin, profile.social.youtube, profile.social.instagram]",{"range":"461","text":"462"},"Update the dependencies array to be: [getPost, match.params.id]",{"range":"463","text":"464"},[2491,2519],"[loading, getCurrentProfile, profile.sex, profile.nationality, profile.avatar, profile.yearsofexperience, profile.school, profile.location, profile.status, profile.bio, profile.phone, profile.wechat, profile.email, profile.social.twitter, profile.social.facebook, profile.social.linkedin, profile.social.youtube, profile.social.instagram]",[489,498],"[getPost, match.params.id]"]